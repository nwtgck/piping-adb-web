{
  "name": "@yume-chan/struct",
  "entries": [
    {
      "version": "0.0.20",
      "tag": "@yume-chan/struct_v0.0.20",
      "date": "Mon, 05 Jun 2023 02:51:41 GMT",
      "comments": {
        "none": [
          {
            "comment": "Rename `StructDeserializeStream` and `StructAsyncDeserializeStream` to `ExactReadable` and `AsyncExactReadable`. Rename its `read` method to `readExactly`. Add a `position` field so the caller can check how many bytes have been read."
          },
          {
            "comment": "Improve performance for decoding integers."
          },
          {
            "comment": "Rename `Struct#fields` to `Struct#concat`. Now `Struct#fields` returns an array of `[name: PropertyKey, definition: StructFieldDefinition<any, any, any>]` tuples."
          },
          {
            "comment": "Use ECMAScript private class fields syntax (supported by Chrome 74, Firefox 90, Safari 14.1 and Node.js 12.0.0)."
          }
        ]
      }
    },
    {
      "version": "0.0.19",
      "tag": "@yume-chan/struct_v0.0.19",
      "date": "Sun, 09 Apr 2023 05:55:33 GMT",
      "comments": {}
    },
    {
      "version": "0.0.18",
      "tag": "@yume-chan/struct_v0.0.18",
      "date": "Wed, 25 Jan 2023 21:33:49 GMT",
      "comments": {
        "none": [
          {
            "comment": "Refactor number types for easier extending (see `ScrcpyFloatToInt16FieldDefinition` for an example)"
          }
        ]
      }
    },
    {
      "version": "0.0.17",
      "tag": "@yume-chan/struct_v0.0.17",
      "date": "Tue, 18 Oct 2022 09:32:30 GMT",
      "comments": {}
    },
    {
      "version": "0.0.16",
      "tag": "@yume-chan/struct_v0.0.16",
      "date": "Sat, 28 May 2022 03:56:37 GMT",
      "comments": {
        "none": [
          {
            "comment": "Add support for custom TypeScript type for `uint8Array`"
          },
          {
            "comment": "Upgrade TypeScript to 4.7.2 to enable Node.js ESM"
          },
          {
            "comment": "Improve performance of `Struct#deserialize()` by up to 200%."
          },
          {
            "comment": "Remove `SyncBird`, it's replaced by `SyncPromise`, which is based on native Promise and is 200% faster."
          }
        ]
      }
    },
    {
      "version": "0.0.15",
      "tag": "@yume-chan/struct_v0.0.15",
      "date": "Mon, 02 May 2022 04:18:01 GMT",
      "comments": {}
    },
    {
      "version": "0.0.14",
      "tag": "@yume-chan/struct_v0.0.14",
      "date": "Sat, 30 Apr 2022 14:05:48 GMT",
      "comments": {}
    },
    {
      "version": "0.0.13",
      "tag": "@yume-chan/struct_v0.0.13",
      "date": "Thu, 28 Apr 2022 01:23:53 GMT",
      "comments": {
        "none": [
          {
            "comment": "Fix an issue that `uint64` still deserialize to negative numbers"
          },
          {
            "comment": "Fix an issue where `Syncbird` can't synchronously invoke `then` on some Bluebird internal methods (for example `reduce`)"
          }
        ]
      }
    },
    {
      "version": "0.0.12",
      "tag": "@yume-chan/struct_v0.0.12",
      "date": "Sun, 03 Apr 2022 11:18:47 GMT",
      "comments": {}
    },
    {
      "version": "0.0.11",
      "tag": "@yume-chan/struct_v0.0.11",
      "date": "Sun, 03 Apr 2022 11:18:11 GMT",
      "comments": {
        "none": [
          {
            "comment": "Update to use Web Streams API"
          },
          {
            "comment": "Improve compatibility with Node.js 12 ESM format"
          },
          {
            "comment": "Update compatibility matrix"
          },
          {
            "comment": "Update license year"
          }
        ]
      }
    },
    {
      "version": "0.0.10",
      "tag": "@yume-chan/struct_v0.0.10",
      "date": "Sun, 09 Jan 2022 15:52:20 GMT",
      "comments": {
        "none": [
          {
            "comment": "Add synchronized deserialize support"
          }
        ]
      }
    },
    {
      "version": "0.0.9",
      "tag": "@yume-chan/struct_v0.0.9",
      "date": "Sun, 09 Jan 2022 15:50:20 GMT",
      "comments": {}
    }
  ]
}
