{"version":3,"file":"static/chunks/1c30e75e-a741aaeb25e0893e.js","mappings":"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","sources":["webpack://_N_E/xterm/webpack/universalModuleDefinition","webpack://_N_E/xterm/./src/browser/AccessibilityManager.ts","webpack://_N_E/xterm/./src/browser/Clipboard.ts","webpack://_N_E/xterm/./src/browser/ColorContrastCache.ts","webpack://_N_E/xterm/./src/browser/ColorManager.ts","webpack://_N_E/xterm/./src/browser/Dom.ts","webpack://_N_E/xterm/./src/browser/Lifecycle.ts","webpack://_N_E/xterm/./src/browser/Linkifier.ts","webpack://_N_E/xterm/./src/browser/Linkifier2.ts","webpack://_N_E/xterm/./src/browser/LocalizableStrings.ts","webpack://_N_E/xterm/./src/browser/MouseZoneManager.ts","webpack://_N_E/xterm/./src/browser/RenderDebouncer.ts","webpack://_N_E/xterm/./src/browser/ScreenDprMonitor.ts","webpack://_N_E/xterm/./src/browser/Terminal.ts","webpack://_N_E/xterm/./src/browser/TimeBasedDebouncer.ts","webpack://_N_E/xterm/./src/browser/Viewport.ts","webpack://_N_E/xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://_N_E/xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://_N_E/xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://_N_E/xterm/./src/browser/input/CompositionHelper.ts","webpack://_N_E/xterm/./src/browser/input/Mouse.ts","webpack://_N_E/xterm/./src/browser/input/MoveToCell.ts","webpack://_N_E/xterm/./src/browser/public/Terminal.ts","webpack://_N_E/xterm/./src/browser/renderer/BaseRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/CursorRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/CustomGlyphs.ts","webpack://_N_E/xterm/./src/browser/renderer/GridCache.ts","webpack://_N_E/xterm/./src/browser/renderer/LinkRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/Renderer.ts","webpack://_N_E/xterm/./src/browser/renderer/RendererUtils.ts","webpack://_N_E/xterm/./src/browser/renderer/SelectionRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/TextRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/CharAtlasCache.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/Constants.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/LRUMap.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://_N_E/xterm/./src/browser/selection/SelectionModel.ts","webpack://_N_E/xterm/./src/browser/services/CharSizeService.ts","webpack://_N_E/xterm/./src/browser/services/CharacterJoinerService.ts","webpack://_N_E/xterm/./src/browser/services/CoreBrowserService.ts","webpack://_N_E/xterm/./src/browser/services/MouseService.ts","webpack://_N_E/xterm/./src/browser/services/RenderService.ts","webpack://_N_E/xterm/./src/browser/services/SelectionService.ts","webpack://_N_E/xterm/./src/browser/services/Services.ts","webpack://_N_E/xterm/./src/browser/services/SoundService.ts","webpack://_N_E/xterm/./src/common/CircularList.ts","webpack://_N_E/xterm/./src/common/Clone.ts","webpack://_N_E/xterm/./src/common/Color.ts","webpack://_N_E/xterm/./src/common/CoreTerminal.ts","webpack://_N_E/xterm/./src/common/EventEmitter.ts","webpack://_N_E/xterm/./src/common/InputHandler.ts","webpack://_N_E/xterm/./src/common/Lifecycle.ts","webpack://_N_E/xterm/./src/common/Platform.ts","webpack://_N_E/xterm/./src/common/SortedList.ts","webpack://_N_E/xterm/./src/common/TypedArrayUtils.ts","webpack://_N_E/xterm/./src/common/WindowsMode.ts","webpack://_N_E/xterm/./src/common/buffer/AttributeData.ts","webpack://_N_E/xterm/./src/common/buffer/Buffer.ts","webpack://_N_E/xterm/./src/common/buffer/BufferLine.ts","webpack://_N_E/xterm/./src/common/buffer/BufferRange.ts","webpack://_N_E/xterm/./src/common/buffer/BufferReflow.ts","webpack://_N_E/xterm/./src/common/buffer/BufferSet.ts","webpack://_N_E/xterm/./src/common/buffer/CellData.ts","webpack://_N_E/xterm/./src/common/buffer/Constants.ts","webpack://_N_E/xterm/./src/common/buffer/Marker.ts","webpack://_N_E/xterm/./src/common/data/Charsets.ts","webpack://_N_E/xterm/./src/common/data/EscapeSequences.ts","webpack://_N_E/xterm/./src/common/input/Keyboard.ts","webpack://_N_E/xterm/./src/common/input/TextDecoder.ts","webpack://_N_E/xterm/./src/common/input/UnicodeV6.ts","webpack://_N_E/xterm/./src/common/input/WriteBuffer.ts","webpack://_N_E/xterm/./src/common/input/XParseColor.ts","webpack://_N_E/xterm/./src/common/parser/Constants.ts","webpack://_N_E/xterm/./src/common/parser/DcsParser.ts","webpack://_N_E/xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://_N_E/xterm/./src/common/parser/OscParser.ts","webpack://_N_E/xterm/./src/common/parser/Params.ts","webpack://_N_E/xterm/./src/common/public/AddonManager.ts","webpack://_N_E/xterm/./src/common/public/BufferApiView.ts","webpack://_N_E/xterm/./src/common/public/BufferLineApiView.ts","webpack://_N_E/xterm/./src/common/public/BufferNamespaceApi.ts","webpack://_N_E/xterm/./src/common/public/ParserApi.ts","webpack://_N_E/xterm/./src/common/public/UnicodeApi.ts","webpack://_N_E/xterm/./src/common/services/BufferService.ts","webpack://_N_E/xterm/./src/common/services/CharsetService.ts","webpack://_N_E/xterm/./src/common/services/CoreMouseService.ts","webpack://_N_E/xterm/./src/common/services/CoreService.ts","webpack://_N_E/xterm/./src/common/services/DecorationService.ts","webpack://_N_E/xterm/./src/common/services/DirtyRowService.ts","webpack://_N_E/xterm/./src/common/services/InstantiationService.ts","webpack://_N_E/xterm/./src/common/services/LogService.ts","webpack://_N_E/xterm/./src/common/services/OptionsService.ts","webpack://_N_E/xterm/./src/common/services/ServiceRegistry.ts","webpack://_N_E/xterm/./src/common/services/Services.ts","webpack://_N_E/xterm/./src/common/services/UnicodeService.ts","webpack://_N_E/xterm/webpack/bootstrap","webpack://_N_E/xterm/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'common/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex, IColor } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionForeground: undefined,\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    const nullColor: IColor = {\n      css: '',\n      rgba: 0\n    };\n    this.colors.selectionForeground = theme.selectionForeground ? this._parseColor(theme.selectionForeground, nullColor) : undefined;\n    if (this.colors.selectionForeground === nullColor) {\n      this.colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: this.colors.ansi.slice()\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n    }\n    this.optionsService.onOptionChange(() => {\n      if (!this._overviewRulerRenderer && this.options.overviewRulerWidth && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n  }\n\n  public override dispose(): void {\n    this._container.remove();\n    this._decorationElements.clear();\n    super.dispose();\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this.refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.actualCellWidth)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.actualCellHeight}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        decoration.onDispose(() => this._removeDecoration(decoration));\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.actualCellHeight}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onOptionChange(o => {\n      if (o === 'overviewRulerWidth') {\n        this._queueRefresh(true);\n      }\n    }));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(window, 'resize', () => {\n      this._queueRefresh(true);\n    }));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  public override dispose(): void {\n    this._canvas?.remove();\n    super.dispose();\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * window.devicePixelRatio);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * window.devicePixelRatio);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * window.devicePixelRatio);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * window.devicePixelRatio);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    // TODO: Is _decorationElements needed?\n\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData, IColor } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { excludeFromContrastRatioDemands, throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _decorationService: IDecorationService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell, x, y);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n\n    // Don't try cache the glyph if it uses any decoration foreground/background override.\n    let hasOverrides = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.backgroundColorRGB || d.foregroundColorRGB) {\n        hasOverrides = true;\n        break;\n      }\n    }\n\n    const atlasDidDraw = hasOverrides ? false : this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData, x: number, y: number): IColor | undefined {\n    // Get any decoration foreground/background overrides, this must be fetched before the early\n    // exist but applied after inverse\n    let bgOverride: number | undefined;\n    let fgOverride: number | undefined;\n    let isTop = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.options.layer !== 'top' && isTop) {\n        continue;\n      }\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba;\n      }\n      isTop = d.options.layer === 'top';\n    }\n\n    // Apply selection foreground if applicable\n    if (!isTop) {\n      if (this._colors.selectionForeground && this._isCellInSelection(x, y)) {\n        fgOverride = this._colors.selectionForeground.rgba;\n      }\n    }\n\n    if (!bgOverride && !fgOverride && (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode()))) {\n      return undefined;\n    }\n\n    if (!bgOverride && !fgOverride) {\n      // Try get from cache\n      const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n      if (adjustedColor !== undefined) {\n        return adjustedColor || undefined;\n      }\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgOverride !== undefined ? Attributes.CM_RGB : bgColorMode, bgOverride ?? bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    let result = rgba.ensureContrastRatio(bgOverride ?? bgRgba, fgOverride ?? fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      if (!fgOverride) {\n        this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n        return undefined;\n      }\n      // If it was an override and there was no contrast change, set as the result\n      result = fgOverride;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    if (!bgOverride && !fgOverride) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n    }\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      return x >= start[0] && y >= start[1] &&\n        x < end[0] && y < end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService, IDecorationService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  /** Padding to apply to the vector's x axis in CSS pixels. */\n  horizontalPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.STROKE, horizontalPadding: 0.5 }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.beginPath();\n  ctx.lineWidth = window.devicePixelRatio;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, charDefinition.horizontalPadding));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, horizontalPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (horizontalPadding * 2 * window.devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (horizontalPadding * window.devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n    // Selection foreground requires a full re-render\n    if (this._colors.selectionForeground) {\n      this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n    }\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    super.onSelectionChanged(start, end, columnSelectMode);\n\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      // Get any decoration foreground/background overrides, this must be fetched before the early\n      // exist but applied after inverse\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, this._bufferService.buffer.ydisp + y)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          nextFillStyle = d.backgroundColorRGB.css;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi.slice()\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'common/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'common/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService, IDecorationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e)));\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e)));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionOpaque.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.onSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ISelectionService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/RendererUtils';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, row)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (this._colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = this._colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._colors.selectionOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = this._colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = this._colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = this._colors.background;\n          }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer, IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRenderedViewportChange = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedViewportChange(): IEvent<{ start: number, end: number }> { return this._onRenderedViewportChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, bgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, bgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  protected _onWriteParsed = new EventEmitter<void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    const i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    let i = this._search(key, 0, this._array.length - 1);\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    let i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    if (this._getKey(this._array[mid]) > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (this._getKey(this._array[mid]) < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  private _onWriteParsed = new EventEmitter<void>();\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e.marker.line);\n\n  private _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRegistered(): IEvent<IInternalDecoration> { return this._onDecorationRegistered.event; }\n  private _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRemoved(): IEvent<IInternalDecoration> { return this._onDecorationRemoved.event; }\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration> {\n    return this._decorations.getKeyIterator(line);\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: undefined\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColorRGB, IColor } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  selectionForeground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /** Iterates over the decorations at a line (in no particular order). */\n  getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration>;\n  /** Iterates over the decorations at a cell (in no particular order). */\n  getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration>;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n"],"names":["self","module","exports","r","e","_terminal","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","i","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","window","dispose","removeElementFromParent","this","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","t","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","_rgba","clear","setCss","bg","fg","getCss","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","css","toColor","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","rgba","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","g","b","channels","toCss","toRgba","c","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","color","blend","selectionForeground","ansi","slice","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selection","nullColor","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","restoreColor","slot","_restoreColors","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","a","alpha","Math","round","ColorManager","elements","parentElement","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","min","max","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","ceil","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_handleMouseDown","_handleMouseUp","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","entries","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","undefined","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","callback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","_runRefreshCallbacks","RenderDebouncer","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","_colorManager","req","acc","ident","toColorRGB","C0","ESC","toRgbString","C1_ESCAPED","ST","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","pasteHandlerWrapper","h","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","R","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollToBottom","result","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","refreshDecorations","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","onDispose","anchor","right","delete","_zonePool","_zonePoolIndex","_linePadding","full","center","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","ColorZoneStore","drawHeight","drawWidth","drawX","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","o","_refreshDrawConstants","outerWidth","innerWidth","pixelsPerLine","nonFullHeight","_width","_refreshDecorations","clearRect","lineWidth","zones","_renderColorZone","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","rowDifference","currX","CONSTRUCTOR_ONLY_OPTIONS","_core","_addonManager","AddonManager","_publicOptions","getter","propName","setter","_checkReadonlyOptions","desc","defineProperty","includes","_checkProposedApi","allowProposedApi","onBell","onBinary","onData","onWriteParsed","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","m","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","writeUtf8","writeln","getOption","setOption","loadAddon","addon","values","Infinity","isNaN","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_columnSelectMode","_currentGlyphIdentifier","chars","code","bold","dim","italic","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","_selectionStart","_selectionEnd","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","hasOverrides","getDecorationsAtCell","d","backgroundColorRGB","foregroundColorRGB","draw","fgOverride","save","opaque","AttributeData","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","bgOverride","isTop","layer","_isCellInSelection","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","bgRgba","_resolveBackgroundRgba","fgRgba","_resolveForegroundRgba","ensureContrastRatio","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","decorationService","_cell","CellData","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","blockElementDefinitions","w","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","horizontalPadding","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","parseFloat","putImageData","createPattern","boxDrawingDefinition","instructions","actualInstructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","error","stroke","closePath","powerlineDefinition","fill","clamp","bezierCurveTo","lineTo","moveTo","cache","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_","_id","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","isPowerlineGlyph","codepoint","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","terminalFont","_forEachCell","firstRow","lastRow","joinedRanges","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","clearColor","offset","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","isXFlipped","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","isCursorRow","lineLength","charElement","isInSelection","resolvedBg","_addStyle","padStart","_applyMinimumContrast","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","_handleOptionsChanged","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","rgb","toPaddedHex","s","contrastRatio","l1","l2","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","toChannels","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultB","resultA","resultARatio","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","_onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","put","concat","subarray","unhook","success","u","utf32ToString","pt","_coreMouseService","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","DEBUG","prototype","clearRange","decode","chWidth","charset","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","spec","parseColor","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","markAllDirty","_disposables","unregister","disposables","array","isNode","navigator","userAgent","platform","test","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","mid","SortedList","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onInsert","onDelete","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","_alt","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","isDisposed","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","UnicodeV6","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","getSubParamsAll","store","cur","_addons","instance","terminal","loadedAddon","_wrappedAddonDispose","init","getLine","BufferLineApiView","BufferApiView","_line","getCell","_onBufferChange","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_decorations","_onDecorationRegistered","_onDecorationRemoved","Decoration","getDecorationsAtLine","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","_end","_entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","altClickMovesCursor","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","_activeProvider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}