{"version":3,"file":"static/chunks/715.ffd9c5182028fc82.js","mappings":"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","sources":["webpack://_N_E/../../common/temp/node_modules/.pnpm/yuv-canvas@1.2.11/node_modules/yuv-canvas/build/shaders.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/yuv-canvas@1.2.11/node_modules/yuv-canvas/src/FrameSink.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/yuv-canvas@1.2.11/node_modules/yuv-canvas/src/SoftwareFrameSink.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/yuv-canvas@1.2.11/node_modules/yuv-canvas/src/WebGLFrameSink.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/yuv-canvas@1.2.11/node_modules/yuv-canvas/src/YCbCr.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/yuv-canvas@1.2.11/node_modules/yuv-canvas/src/depower.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/yuv-canvas@1.2.11/node_modules/yuv-canvas/src/yuv-canvas.js"],"sourcesContent":["module.exports = {\n  vertex: \"precision mediump float;\\n\\nattribute vec2 aPosition;\\nattribute vec2 aLumaPosition;\\nattribute vec2 aChromaPosition;\\nvarying vec2 vLumaPosition;\\nvarying vec2 vChromaPosition;\\nvoid main() {\\n    gl_Position = vec4(aPosition, 0, 1);\\n    vLumaPosition = aLumaPosition;\\n    vChromaPosition = aChromaPosition;\\n}\\n\",\n  fragment: \"// inspired by https://github.com/mbebenita/Broadway/blob/master/Player/canvas.js\\n\\nprecision mediump float;\\n\\nuniform sampler2D uTextureY;\\nuniform sampler2D uTextureCb;\\nuniform sampler2D uTextureCr;\\nvarying vec2 vLumaPosition;\\nvarying vec2 vChromaPosition;\\nvoid main() {\\n   // Y, Cb, and Cr planes are uploaded as ALPHA textures.\\n   float fY = texture2D(uTextureY, vLumaPosition).w;\\n   float fCb = texture2D(uTextureCb, vChromaPosition).w;\\n   float fCr = texture2D(uTextureCr, vChromaPosition).w;\\n\\n   // Premultipy the Y...\\n   float fYmul = fY * 1.1643828125;\\n\\n   // And convert that to RGB!\\n   gl_FragColor = vec4(\\n     fYmul + 1.59602734375 * fCr - 0.87078515625,\\n     fYmul - 0.39176171875 * fCb - 0.81296875 * fCr + 0.52959375,\\n     fYmul + 2.017234375   * fCb - 1.081390625,\\n     1\\n   );\\n}\\n\",\n  vertexStripe: \"precision mediump float;\\n\\nattribute vec2 aPosition;\\nattribute vec2 aTexturePosition;\\nvarying vec2 vTexturePosition;\\n\\nvoid main() {\\n    gl_Position = vec4(aPosition, 0, 1);\\n    vTexturePosition = aTexturePosition;\\n}\\n\",\n  fragmentStripe: \"// extra 'stripe' texture fiddling to work around IE 11's poor performance on gl.LUMINANCE and gl.ALPHA textures\\n\\nprecision mediump float;\\n\\nuniform sampler2D uStripe;\\nuniform sampler2D uTexture;\\nvarying vec2 vTexturePosition;\\nvoid main() {\\n   // Y, Cb, and Cr planes are mapped into a pseudo-RGBA texture\\n   // so we can upload them without expanding the bytes on IE 11\\n   // which doesn't allow LUMINANCE or ALPHA textures\\n   // The stripe textures mark which channel to keep for each pixel.\\n   // Each texture extraction will contain the relevant value in one\\n   // channel only.\\n\\n   float fLuminance = dot(\\n      texture2D(uStripe, vTexturePosition),\\n      texture2D(uTexture, vTexturePosition)\\n   );\\n\\n   gl_FragColor = vec4(0, 0, 0, fLuminance);\\n}\\n\"\n};\n","(function() {\n  \"use strict\";\n\n  /**\n   * Create a YUVCanvas and attach it to an HTML5 canvas element.\n   *\n   * This will take over the drawing context of the canvas and may turn\n   * it into a WebGL 3d canvas if possible. Do not attempt to use the\n   * drawing context directly after this.\n   *\n   * @param {HTMLCanvasElement} canvas - HTML canvas element to attach to\n   * @param {YUVCanvasOptions} options - map of options\n   * @throws exception if WebGL requested but unavailable\n   * @constructor\n   * @abstract\n   */\n  function FrameSink(canvas, options) {\n    throw new Error('abstract');\n  }\n\n  /**\n   * Draw a single YUV frame on the underlying canvas, converting to RGB.\n   * If necessary the canvas will be resized to the optimal pixel size\n   * for the given buffer's format.\n   *\n   * @param {YUVBuffer} buffer - the YUV buffer to draw\n   * @see {@link https://www.npmjs.com/package/yuv-buffer|yuv-buffer} for format\n   */\n  FrameSink.prototype.drawFrame = function(buffer) {\n    throw new Error('abstract');\n  };\n\n  /**\n   * Clear the canvas using appropriate underlying 2d or 3d context.\n   */\n  FrameSink.prototype.clear = function() {\n    throw new Error('abstract');\n  };\n\n  module.exports = FrameSink;\n\n})();\n","/*\nCopyright (c) 2014-2016 Brion Vibber <brion@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n\t\"use strict\";\n\n\tvar FrameSink = require('./FrameSink.js'),\n\t\tYCbCr = require('./YCbCr.js');\n\n\t/**\n\t * @param {HTMLCanvasElement} canvas - HTML canvas eledment to attach to\n\t * @constructor\n\t */\n\tfunction SoftwareFrameSink(canvas) {\n\t\tvar self = this,\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\timageData = null,\n\t\t\tresampleCanvas = null,\n\t\t\tresampleContext = null;\n\n\n\n\t\tfunction initImageData(width, height) {\n\t\t\timageData = ctx.createImageData(width, height);\n\n\t\t\t// Prefill the alpha to opaque\n\t\t\tvar data = imageData.data,\n\t\t\t\tpixelCount = width * height * 4;\n\t\t\tfor (var i = 0; i < pixelCount; i += 4) {\n\t\t\t\tdata[i + 3] = 255;\n\t\t\t}\n\t\t}\n\n\t\tfunction initResampleCanvas(cropWidth, cropHeight) {\n\t\t\tresampleCanvas = document.createElement('canvas');\n\t\t\tresampleCanvas.width = cropWidth;\n\t\t\tresampleCanvas.height = cropHeight;\n\t\t\tresampleContext = resampleCanvas.getContext('2d');\n\t\t}\n\n\t\t/**\n\t\t * Actually draw a frame into the canvas.\n\t\t * @param {YUVFrame} buffer - YUV frame buffer object to draw\n\t\t */\n\t\tself.drawFrame = function drawFrame(buffer) {\n\t\t\tvar format = buffer.format;\n\n\t\t\tif (canvas.width !== format.displayWidth || canvas.height !== format.displayHeight) {\n\t\t\t\t// Keep the canvas at the right size...\n\t\t\t\tcanvas.width = format.displayWidth;\n\t\t\t\tcanvas.height = format.displayHeight;\n\t\t\t}\n\n\t\t\tif (imageData === null ||\n\t\t\t\t\timageData.width != format.width ||\n\t\t\t\t\timageData.height != format.height) {\n\t\t\t\tinitImageData(format.width, format.height);\n\t\t\t}\n\n\t\t\t// YUV -> RGB over the entire encoded frame\n\t\t\tYCbCr.convertYCbCr(buffer, imageData.data);\n\n\t\t\tvar resample = (format.cropWidth != format.displayWidth || format.cropHeight != format.displayHeight);\n\t\t\tvar drawContext;\n\t\t\tif (resample) {\n\t\t\t\t// hack for non-square aspect-ratio\n\t\t\t\t// putImageData doesn't resample, so we have to draw in two steps.\n\t\t\t\tif (!resampleCanvas) {\n\t\t\t\t\tinitResampleCanvas(format.cropWidth, format.cropHeight);\n\t\t\t\t}\n\t\t\t\tdrawContext = resampleContext;\n\t\t\t} else {\n\t\t\t\tdrawContext = ctx;\n\t\t\t}\n\n\t\t\t// Draw cropped frame to either the final or temporary canvas\n\t\t\tdrawContext.putImageData(imageData,\n\t\t\t\t-format.cropLeft, -format.cropTop, // must offset the offset\n\t\t\t\tformat.cropLeft, format.cropTop,\n\t\t\t\tformat.cropWidth, format.cropHeight);\n\n\t\t\tif (resample) {\n\t\t\t\tctx.drawImage(resampleCanvas, 0, 0, format.displayWidth, format.displayHeight);\n\t\t\t}\n\t\t};\n\n\t\tself.clear = function() {\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t};\n\n\t\treturn self;\n\t}\n\n\tSoftwareFrameSink.prototype = Object.create(FrameSink.prototype);\n\n\tmodule.exports = SoftwareFrameSink;\n})();\n","/*\nCopyright (c) 2014-2016 Brion Vibber <brion@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n\t\"use strict\";\n\n\tvar FrameSink = require('./FrameSink.js'),\n\t\tshaders = require('../build/shaders.js');\n\n\t/**\n\t * Warning: canvas must not have been used for 2d drawing prior!\n\t *\n\t * @param {HTMLCanvasElement} canvas - HTML canvas element to attach to\n\t * @constructor\n\t */\n\tfunction WebGLFrameSink(canvas) {\n\t\tvar self = this,\n\t\t\tgl = WebGLFrameSink.contextForCanvas(canvas),\n\t\t\tdebug = false; // swap this to enable more error checks, which can slow down rendering\n\n\t\tif (gl === null) {\n\t\t\tthrow new Error('WebGL unavailable');\n\t\t}\n\n\t\t// GL!\n\t\tfunction checkError() {\n\t\t\tif (debug) {\n\t\t\t\terr = gl.getError();\n\t\t\t\tif (err !== 0) {\n\t\t\t\t\tthrow new Error(\"GL error \" + err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction compileShader(type, source) {\n\t\t\tvar shader = gl.createShader(type);\n\t\t\tgl.shaderSource(shader, source);\n\t\t\tgl.compileShader(shader);\n\n\t\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\t\t\tvar err = gl.getShaderInfoLog(shader);\n\t\t\t\tgl.deleteShader(shader);\n\t\t\t\tthrow new Error('GL shader compilation for ' + type + ' failed: ' + err);\n\t\t\t}\n\n\t\t\treturn shader;\n\t\t}\n\n\n\t\tvar program,\n\t\t\tunpackProgram,\n\t\t\terr;\n\n\t\t// In the world of GL there are no rectangles.\n\t\t// There are only triangles.\n\t\t// THERE IS NO SPOON.\n\t\tvar rectangle = new Float32Array([\n\t\t\t// First triangle (top left, clockwise)\n\t\t\t-1.0, -1.0,\n\t\t\t+1.0, -1.0,\n\t\t\t-1.0, +1.0,\n\n\t\t\t// Second triangle (bottom right, clockwise)\n\t\t\t-1.0, +1.0,\n\t\t\t+1.0, -1.0,\n\t\t\t+1.0, +1.0\n\t\t]);\n\n\t\tvar textures = {};\n\t\tvar framebuffers = {};\n\t\tvar stripes = {};\n\t\tvar buf, positionLocation, unpackPositionLocation;\n\t\tvar unpackTexturePositionBuffer, unpackTexturePositionLocation;\n\t\tvar stripeLocation, unpackTextureLocation;\n\t\tvar lumaPositionBuffer, lumaPositionLocation;\n\t\tvar chromaPositionBuffer, chromaPositionLocation;\n\n\t\tfunction createOrReuseTexture(name, formatUpdate) {\n\t\t\tif (!textures[name] || formatUpdate) {\n\t\t\t\ttextures[name] = gl.createTexture();\n\t\t\t}\n\t\t\treturn textures[name];\n\t\t}\n\n\t\tfunction uploadTexture(name, formatUpdate, width, height, data) {\n\t\t\tvar create = !textures[name] || formatUpdate;\n\t\t\tvar texture = createOrReuseTexture(name, formatUpdate);\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\n\t\t\tif (WebGLFrameSink.stripe) {\n\t\t\t\tvar uploadTemp = !textures[name + '_temp'] || formatUpdate;\n\t\t\t\tvar tempTexture = createOrReuseTexture(name + '_temp', formatUpdate);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, tempTexture);\n\t\t\t\tif (uploadTemp) {\n\t\t\t\t\t// new texture\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\tgl.RGBA, // internal format\n\t\t\t\t\t\twidth / 4,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\t0, // border\n\t\t\t\t\t\tgl.RGBA, // format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, // type\n\t\t\t\t\t\tdata // data!\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// update texture\n\t\t\t\t\tgl.texSubImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\t0, // x offset\n\t\t\t\t\t\t0, // y offset\n\t\t\t\t\t\twidth / 4,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\tgl.RGBA, // format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, // type\n\t\t\t\t\t\tdata // data!\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tvar stripeTexture = textures[name + '_stripe'];\n\t\t\t\tvar uploadStripe = !stripeTexture || formatUpdate;\n\t\t\t\tif (uploadStripe) {\n\t\t\t\t\tstripeTexture = createOrReuseTexture(name + '_stripe', formatUpdate);\n\t\t\t\t}\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, stripeTexture);\n\t\t\t\tif (uploadStripe) {\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\tgl.RGBA, // internal format\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t0, // border\n\t\t\t\t\t\tgl.RGBA, // format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\t\t\tbuildStripe(width, 1) // data!\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tif (create) {\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\t\t\tgl.texImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\tgl.ALPHA, // internal format\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\t0, // border\n\t\t\t\t\t\tgl.ALPHA, // format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\t\t\tdata // data!\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texSubImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\t0, // x\n\t\t\t\t\t\t0, // y\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\tgl.ALPHA, // internal format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\t\t\tdata // data!\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction unpackTexture(name, formatUpdate, width, height) {\n\t\t\tvar texture = textures[name];\n\n\t\t\t// Upload to a temporary RGBA texture, then unpack it.\n\t\t\t// This is faster than CPU-side swizzling in ANGLE on Windows.\n\t\t\tgl.useProgram(unpackProgram);\n\n\t\t\tvar fb = framebuffers[name];\n\t\t\tif (!fb || formatUpdate) {\n\t\t\t\t// Create a framebuffer and an empty target size\n\t\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0, // mip level\n\t\t\t\t\tgl.RGBA, // internal format\n\t\t\t\t\twidth,\n\t\t\t\t\theight,\n\t\t\t\t\t0, // border\n\t\t\t\t\tgl.RGBA, // format\n\t\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\t\tnull // data!\n\t\t\t\t);\n\n\t\t\t\tfb = framebuffers[name] = gl.createFramebuffer();\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\t\t\tvar tempTexture = textures[name + '_temp'];\n\t\t\tgl.activeTexture(gl.TEXTURE1);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, tempTexture);\n\t\t\tgl.uniform1i(unpackTextureLocation, 1);\n\n\t\t\tvar stripeTexture = textures[name + '_stripe'];\n\t\t\tgl.activeTexture(gl.TEXTURE2);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, stripeTexture);\n\t\t\tgl.uniform1i(stripeLocation, 2);\n\n\t\t\t// Rectangle geometry\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf);\n\t\t\tgl.enableVertexAttribArray(positionLocation);\n\t\t\tgl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\t// Set up the texture geometry...\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, unpackTexturePositionBuffer);\n\t\t\tgl.enableVertexAttribArray(unpackTexturePositionLocation);\n\t\t\tgl.vertexAttribPointer(unpackTexturePositionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\t// Draw into the target texture...\n\t\t\tgl.viewport(0, 0, width, height);\n\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, rectangle.length / 2);\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t}\n\n\t\tfunction attachTexture(name, register, index) {\n\t\t\tgl.activeTexture(register);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, textures[name]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n\t\t\tgl.uniform1i(gl.getUniformLocation(program, name), index);\n\t\t}\n\n\t\tfunction buildStripe(width) {\n\t\t\tif (stripes[width]) {\n\t\t\t\treturn stripes[width];\n\t\t\t}\n\t\t\tvar len = width,\n\t\t\t\tout = new Uint32Array(len);\n\t\t\tfor (var i = 0; i < len; i += 4) {\n\t\t\t\tout[i    ] = 0x000000ff;\n\t\t\t\tout[i + 1] = 0x0000ff00;\n\t\t\t\tout[i + 2] = 0x00ff0000;\n\t\t\t\tout[i + 3] = 0xff000000;\n\t\t\t}\n\t\t\treturn stripes[width] = new Uint8Array(out.buffer);\n\t\t}\n\n\t\tfunction initProgram(vertexShaderSource, fragmentShaderSource) {\n\t\t\tvar vertexShader = compileShader(gl.VERTEX_SHADER, vertexShaderSource);\n\t\t\tvar fragmentShader = compileShader(gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n\t\t\tvar program = gl.createProgram();\n\t\t\tgl.attachShader(program, vertexShader);\n\t\t\tgl.attachShader(program, fragmentShader);\n\n\t\t\tgl.linkProgram(program);\n\t\t\tif (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\t\t\t\tvar err = gl.getProgramInfoLog(program);\n\t\t\t\tgl.deleteProgram(program);\n\t\t\t\tthrow new Error('GL program linking failed: ' + err);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction init() {\n\t\t\tif (WebGLFrameSink.stripe) {\n\t\t\t\tunpackProgram = initProgram(shaders.vertexStripe, shaders.fragmentStripe);\n\t\t\t\tunpackPositionLocation = gl.getAttribLocation(unpackProgram, 'aPosition');\n\n\t\t\t\tunpackTexturePositionBuffer = gl.createBuffer();\n\t\t\t\tvar textureRectangle = new Float32Array([\n\t\t\t\t\t0, 0,\n\t\t\t\t\t1, 0,\n\t\t\t\t\t0, 1,\n\t\t\t\t\t0, 1,\n\t\t\t\t\t1, 0,\n\t\t\t\t\t1, 1\n\t\t\t\t]);\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, unpackTexturePositionBuffer);\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, textureRectangle, gl.STATIC_DRAW);\n\n\t\t\t\tunpackTexturePositionLocation = gl.getAttribLocation(unpackProgram, 'aTexturePosition');\n\t\t\t\tstripeLocation = gl.getUniformLocation(unpackProgram, 'uStripe');\n\t\t\t\tunpackTextureLocation = gl.getUniformLocation(unpackProgram, 'uTexture');\n\t\t\t}\n\t\t\tprogram = initProgram(shaders.vertex, shaders.fragment);\n\n\t\t\tbuf = gl.createBuffer();\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf);\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, rectangle, gl.STATIC_DRAW);\n\n\t\t\tpositionLocation = gl.getAttribLocation(program, 'aPosition');\n\t\t\tlumaPositionBuffer = gl.createBuffer();\n\t\t\tlumaPositionLocation = gl.getAttribLocation(program, 'aLumaPosition');\n\t\t\tchromaPositionBuffer = gl.createBuffer();\n\t\t\tchromaPositionLocation = gl.getAttribLocation(program, 'aChromaPosition');\n\t\t}\n\n\t\t/**\n\t\t * Actually draw a frame.\n\t\t * @param {YUVFrame} buffer - YUV frame buffer object\n\t\t */\n\t\tself.drawFrame = function(buffer) {\n\t\t\tvar format = buffer.format;\n\n\t\t\tvar formatUpdate = (!program || canvas.width !== format.displayWidth || canvas.height !== format.displayHeight);\n\t\t\tif (formatUpdate) {\n\t\t\t\t// Keep the canvas at the right size...\n\t\t\t\tcanvas.width = format.displayWidth;\n\t\t\t\tcanvas.height = format.displayHeight;\n\t\t\t\tself.clear();\n\t\t\t}\n\n\t\t\tif (!program) {\n\t\t\t\tinit();\n\t\t\t}\n\n\t\t\tif (formatUpdate) {\n\t\t\t\tvar setupTexturePosition = function(buffer, location, texWidth) {\n\t\t\t\t\t// Warning: assumes that the stride for Cb and Cr is the same size in output pixels\n\t\t\t\t\tvar textureX0 = format.cropLeft / texWidth;\n\t\t\t\t\tvar textureX1 = (format.cropLeft + format.cropWidth) / texWidth;\n\t\t\t\t\tvar textureY0 = (format.cropTop + format.cropHeight) / format.height;\n\t\t\t\t\tvar textureY1 = format.cropTop / format.height;\n\t\t\t\t\tvar textureRectangle = new Float32Array([\n\t\t\t\t\t\ttextureX0, textureY0,\n\t\t\t\t\t\ttextureX1, textureY0,\n\t\t\t\t\t\ttextureX0, textureY1,\n\t\t\t\t\t\ttextureX0, textureY1,\n\t\t\t\t\t\ttextureX1, textureY0,\n\t\t\t\t\t\ttextureX1, textureY1\n\t\t\t\t\t]);\n\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, textureRectangle, gl.STATIC_DRAW);\n\t\t\t\t};\n\t\t\t\tsetupTexturePosition(\n\t\t\t\t\tlumaPositionBuffer,\n\t\t\t\t\tlumaPositionLocation,\n\t\t\t\t\tbuffer.y.stride);\n\t\t\t\tsetupTexturePosition(\n\t\t\t\t\tchromaPositionBuffer,\n\t\t\t\t\tchromaPositionLocation,\n\t\t\t\t\tbuffer.u.stride * format.width / format.chromaWidth);\n\t\t\t}\n\n\t\t\t// Create or update the textures...\n\t\t\tuploadTexture('uTextureY', formatUpdate, buffer.y.stride, format.height, buffer.y.bytes);\n\t\t\tuploadTexture('uTextureCb', formatUpdate, buffer.u.stride, format.chromaHeight, buffer.u.bytes);\n\t\t\tuploadTexture('uTextureCr', formatUpdate, buffer.v.stride, format.chromaHeight, buffer.v.bytes);\n\n\t\t\tif (WebGLFrameSink.stripe) {\n\t\t\t\t// Unpack the textures after upload to avoid blocking on GPU\n\t\t\t\tunpackTexture('uTextureY', formatUpdate, buffer.y.stride, format.height);\n\t\t\t\tunpackTexture('uTextureCb', formatUpdate, buffer.u.stride, format.chromaHeight);\n\t\t\t\tunpackTexture('uTextureCr', formatUpdate, buffer.v.stride, format.chromaHeight);\n\t\t\t}\n\n\t\t\t// Set up the rectangle and draw it\n\t\t\tgl.useProgram(program);\n\t\t\tgl.viewport(0, 0, canvas.width, canvas.height);\n\n\t\t\tattachTexture('uTextureY', gl.TEXTURE0, 0);\n\t\t\tattachTexture('uTextureCb', gl.TEXTURE1, 1);\n\t\t\tattachTexture('uTextureCr', gl.TEXTURE2, 2);\n\n\t\t\t// Set up geometry\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf);\n\t\t\tgl.enableVertexAttribArray(positionLocation);\n\t\t\tgl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\t// Set up the texture geometry...\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, lumaPositionBuffer);\n\t\t\tgl.enableVertexAttribArray(lumaPositionLocation);\n\t\t\tgl.vertexAttribPointer(lumaPositionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, chromaPositionBuffer);\n\t\t\tgl.enableVertexAttribArray(chromaPositionLocation);\n\t\t\tgl.vertexAttribPointer(chromaPositionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\t// Aaaaand draw stuff.\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, rectangle.length / 2);\n\t\t};\n\n\t\tself.clear = function() {\n\t\t\tgl.viewport(0, 0, canvas.width, canvas.height);\n\t\t\tgl.clearColor(0.0, 0.0, 0.0, 0.0);\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t};\n\n\t\tself.clear();\n\n\t\treturn self;\n\t}\n\n\t// Optional performance hack for Windows; luminance and alpha textures are\n\t// ssllooww to upload on some machines, so we pack into RGBA and unpack in\n\t// the shaders.\n\t//\n\t// Some browsers / GPUs seem to have no problem with this, others have\n\t// a huge impact in CPU doing the texture uploads.\n\t//\n\t// For instance on macOS 12.2 on a MacBook Pro 2018 with AMD GPU it\n\t// can real down at high res. This is partially compensated for by\n\t// improving the upload-vs-update behavior for the alpha textures.\n\t//\n\t// Currently keeping it off as of April 2022, but leaving it in so it\n\t// can be enabled if desired.\n\tWebGLFrameSink.stripe = false;\n\n\tWebGLFrameSink.contextForCanvas = function(canvas) {\n\t\tvar options = {\n\t\t\t// Don't trigger discrete GPU in multi-GPU systems\n\t\t\tpreferLowPowerToHighPerformance: true,\n\t\t\tpowerPreference: 'low-power',\n\t\t\t// Don't try to use software GL rendering!\n\t\t\tfailIfMajorPerformanceCaveat: true,\n\t\t\t// In case we need to capture the resulting output.\n\t\t\tpreserveDrawingBuffer: true\n\t\t};\n\t\treturn canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options);\n\t};\n\n\t/**\n\t * Static function to check if WebGL will be available with appropriate features.\n\t *\n\t * @returns {boolean} - true if available\n\t */\n\tWebGLFrameSink.isAvailable = function() {\n\t\tvar canvas = document.createElement('canvas'),\n\t\t\tgl;\n\t\tcanvas.width = 1;\n\t\tcanvas.height = 1;\n\t\ttry {\n\t\t\tgl = WebGLFrameSink.contextForCanvas(canvas);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\tif (gl) {\n\t\t\tvar register = gl.TEXTURE0,\n\t\t\t\twidth = 4,\n\t\t\t\theight = 4,\n\t\t\t\ttexture = gl.createTexture(),\n\t\t\t\tdata = new Uint8Array(width * height),\n\t\t\t\ttexWidth = WebGLFrameSink.stripe ? (width / 4) : width,\n\t\t\t\tformat = WebGLFrameSink.stripe ? gl.RGBA : gl.ALPHA,\n\t\t\t\tfilter = WebGLFrameSink.stripe ? gl.NEAREST : gl.LINEAR;\n\n\t\t\tgl.activeTexture(register);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\t\t\tgl.texImage2D(\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t0, // mip level\n\t\t\t\tformat, // internal format\n\t\t\t\ttexWidth,\n\t\t\t\theight,\n\t\t\t\t0, // border\n\t\t\t\tformat, // format\n\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\tdata // data!\n\t\t\t);\n\n\t\t\tvar err = gl.getError();\n\t\t\tif (err) {\n\t\t\t\t// Doesn't support alpha textures?\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tWebGLFrameSink.prototype = Object.create(FrameSink.prototype);\n\n\tmodule.exports = WebGLFrameSink;\n})();\n","/*\nCopyright (c) 2014-2019 Brion Vibber <brion@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n\t\"use strict\";\n\n\tvar depower = require('./depower.js');\n\n\t/**\n\t * Basic YCbCr->RGB conversion\n\t *\n\t * @author Brion Vibber <brion@pobox.com>\n\t * @copyright 2014-2019\n\t * @license MIT-style\n\t *\n\t * @param {YUVFrame} buffer - input frame buffer\n\t * @param {Uint8ClampedArray} output - array to draw RGBA into\n\t * Assumes that the output array already has alpha channel set to opaque.\n\t */\n\tfunction convertYCbCr(buffer, output) {\n\t\tvar width = buffer.format.width | 0,\n\t\t\theight = buffer.format.height | 0,\n\t\t\thdec = depower(buffer.format.width / buffer.format.chromaWidth) | 0,\n\t\t\tvdec = depower(buffer.format.height / buffer.format.chromaHeight) | 0,\n\t\t\tbytesY = buffer.y.bytes,\n\t\t\tbytesCb = buffer.u.bytes,\n\t\t\tbytesCr = buffer.v.bytes,\n\t\t\tstrideY = buffer.y.stride | 0,\n\t\t\tstrideCb = buffer.u.stride | 0,\n\t\t\tstrideCr = buffer.v.stride | 0,\n\t\t\toutStride = width << 2,\n\t\t\tYPtr = 0, Y0Ptr = 0, Y1Ptr = 0,\n\t\t\tCbPtr = 0, CrPtr = 0,\n\t\t\toutPtr = 0, outPtr0 = 0, outPtr1 = 0,\n\t\t\tcolorCb = 0, colorCr = 0,\n\t\t\tmultY = 0, multCrR = 0, multCbCrG = 0, multCbB = 0,\n\t\t\tx = 0, y = 0, xdec = 0, ydec = 0;\n\n\t\tif (hdec == 1 && vdec == 1) {\n\t\t\t// Optimize for 4:2:0, which is most common\n\t\t\toutPtr0 = 0;\n\t\t\toutPtr1 = outStride;\n\t\t\tydec = 0;\n\t\t\tfor (y = 0; y < height; y += 2) {\n\t\t\t\tY0Ptr = y * strideY | 0;\n\t\t\t\tY1Ptr = Y0Ptr + strideY | 0;\n\t\t\t\tCbPtr = ydec * strideCb | 0;\n\t\t\t\tCrPtr = ydec * strideCr | 0;\n\t\t\t\tfor (x = 0; x < width; x += 2) {\n\t\t\t\t\tcolorCb = bytesCb[CbPtr++] | 0;\n\t\t\t\t\tcolorCr = bytesCr[CrPtr++] | 0;\n\n\t\t\t\t\t// Quickie YUV conversion\n\t\t\t\t\t// https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.2020_conversion\n\t\t\t\t\t// multiplied by 256 for integer-friendliness\n\t\t\t\t\tmultCrR   = (409 * colorCr | 0) - 57088 | 0;\n\t\t\t\t\tmultCbCrG = (100 * colorCb | 0) + (208 * colorCr | 0) - 34816 | 0;\n\t\t\t\t\tmultCbB   = (516 * colorCb | 0) - 70912 | 0;\n\n\t\t\t\t\tmultY = 298 * bytesY[Y0Ptr++] | 0;\n\t\t\t\t\toutput[outPtr0    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr0 + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr0 + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr0 += 4;\n\n\t\t\t\t\tmultY = 298 * bytesY[Y0Ptr++] | 0;\n\t\t\t\t\toutput[outPtr0    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr0 + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr0 + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr0 += 4;\n\n\t\t\t\t\tmultY = 298 * bytesY[Y1Ptr++] | 0;\n\t\t\t\t\toutput[outPtr1    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr1 + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr1 + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr1 += 4;\n\n\t\t\t\t\tmultY = 298 * bytesY[Y1Ptr++] | 0;\n\t\t\t\t\toutput[outPtr1    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr1 + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr1 + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr1 += 4;\n\t\t\t\t}\n\t\t\t\toutPtr0 += outStride;\n\t\t\t\toutPtr1 += outStride;\n\t\t\t\tydec++;\n\t\t\t}\n\t\t} else {\n\t\t\toutPtr = 0;\n\t\t\tfor (y = 0; y < height; y++) {\n\t\t\t\txdec = 0;\n\t\t\t\tydec = y >> vdec;\n\t\t\t\tYPtr = y * strideY | 0;\n\t\t\t\tCbPtr = ydec * strideCb | 0;\n\t\t\t\tCrPtr = ydec * strideCr | 0;\n\n\t\t\t\tfor (x = 0; x < width; x++) {\n\t\t\t\t\txdec = x >> hdec;\n\t\t\t\t\tcolorCb = bytesCb[CbPtr + xdec] | 0;\n\t\t\t\t\tcolorCr = bytesCr[CrPtr + xdec] | 0;\n\n\t\t\t\t\t// Quickie YUV conversion\n\t\t\t\t\t// https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.2020_conversion\n\t\t\t\t\t// multiplied by 256 for integer-friendliness\n\t\t\t\t\tmultCrR   = (409 * colorCr | 0) - 57088 | 0;\n\t\t\t\t\tmultCbCrG = (100 * colorCb | 0) + (208 * colorCr | 0) - 34816 | 0;\n\t\t\t\t\tmultCbB   = (516 * colorCb | 0) - 70912 | 0;\n\n\t\t\t\t\tmultY = 298 * bytesY[YPtr++] | 0;\n\t\t\t\t\toutput[outPtr    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr += 4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmodule.exports = {\n\t\tconvertYCbCr: convertYCbCr\n\t};\n})();\n","/*\nCopyright (c) 2014-2016 Brion Vibber <brion@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n  \"use strict\";\n\n  /**\n   * Convert a ratio into a bit-shift count; for instance a ratio of 2\n   * becomes a bit-shift of 1, while a ratio of 1 is a bit-shift of 0.\n   *\n   * @author Brion Vibber <brion@pobox.com>\n   * @copyright 2016\n   * @license MIT-style\n   *\n   * @param {number} ratio - the integer ratio to convert.\n   * @returns {number} - number of bits to shift to multiply/divide by the ratio.\n   * @throws exception if given a non-power-of-two\n   */\n  function depower(ratio) {\n    var shiftCount = 0,\n      n = ratio >> 1;\n    while (n != 0) {\n      n = n >> 1;\n      shiftCount++\n    }\n    if (ratio !== (1 << shiftCount)) {\n      throw 'chroma plane dimensions must be power of 2 ratio to luma plane dimensions; got ' + ratio;\n    }\n    return shiftCount;\n  }\n\n  module.exports = depower;\n})();\n","/*\nCopyright (c) 2014-2016 Brion Vibber <brion@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n  \"use strict\";\n\n  var FrameSink = require('./FrameSink.js'),\n    SoftwareFrameSink = require('./SoftwareFrameSink.js'),\n    WebGLFrameSink = require('./WebGLFrameSink.js');\n\n  /**\n   * @typedef {Object} YUVCanvasOptions\n   * @property {boolean} webGL - Whether to use WebGL to draw to the canvas and accelerate color space conversion. If left out, defaults to auto-detect.\n   */\n\n  var YUVCanvas = {\n    FrameSink: FrameSink,\n\n    SoftwareFrameSink: SoftwareFrameSink,\n\n    WebGLFrameSink: WebGLFrameSink,\n\n    /**\n     * Attach a suitable FrameSink instance to an HTML5 canvas element.\n     *\n     * This will take over the drawing context of the canvas and may turn\n     * it into a WebGL 3d canvas if possible. Do not attempt to use the\n     * drawing context directly after this.\n     *\n     * @param {HTMLCanvasElement} canvas - HTML canvas element to attach to\n     * @param {YUVCanvasOptions} options - map of options\n     * @returns {FrameSink} - instance of suitable subclass.\n     */\n    attach: function(canvas, options) {\n      options = options || {};\n      var webGL = ('webGL' in options) ? options.webGL : WebGLFrameSink.isAvailable();\n      if (webGL) {\n        return new WebGLFrameSink(canvas, options);\n      } else {\n        return new SoftwareFrameSink(canvas, options);\n      }\n    }\n  };\n\n  module.exports = YUVCanvas;\n})();\n"],"names":["module","exports","vertex","fragment","vertexStripe","fragmentStripe","FrameSink","canvas","options","Error","prototype","drawFrame","buffer","clear","YCbCr","SoftwareFrameSink","self","this","ctx","getContext","imageData","resampleCanvas","resampleContext","format","width","displayWidth","height","displayHeight","data","createImageData","pixelCount","i","initImageData","convertYCbCr","drawContext","cropWidth","cropHeight","resample","document","createElement","putImageData","cropLeft","cropTop","drawImage","clearRect","Object","create","shaders","WebGLFrameSink","program","unpackProgram","gl","contextForCanvas","compileShader","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","buf","positionLocation","unpackTexturePositionBuffer","unpackTexturePositionLocation","stripeLocation","unpackTextureLocation","lumaPositionBuffer","lumaPositionLocation","chromaPositionBuffer","chromaPositionLocation","rectangle","Float32Array","textures","framebuffers","stripes","createOrReuseTexture","name","formatUpdate","createTexture","uploadTexture","texture","activeTexture","TEXTURE0","stripe","uploadTemp","tempTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","texSubImage2D","stripeTexture","uploadStripe","len","out","Uint32Array","Uint8Array","buildStripe","LINEAR","ALPHA","unpackTexture","useProgram","fb","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE1","uniform1i","TEXTURE2","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","viewport","drawArrays","TRIANGLES","length","attachTexture","register","index","getUniformLocation","initProgram","vertexShaderSource","fragmentShaderSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","getAttribLocation","createBuffer","textureRectangle","bufferData","STATIC_DRAW","init","setupTexturePosition","location","texWidth","textureX0","textureX1","textureY0","textureY1","y","stride","u","chromaWidth","bytes","chromaHeight","v","clearColor","COLOR_BUFFER_BIT","preferLowPowerToHighPerformance","powerPreference","failIfMajorPerformanceCaveat","preserveDrawingBuffer","isAvailable","e","filter","getError","depower","output","hdec","vdec","bytesY","bytesCb","bytesCr","strideY","strideCb","strideCr","outStride","YPtr","Y0Ptr","Y1Ptr","CbPtr","CrPtr","outPtr","outPtr0","outPtr1","colorCb","colorCr","multY","multCrR","multCbCrG","multCbB","x","xdec","ydec","ratio","shiftCount","n","YUVCanvas","attach","webGL"],"sourceRoot":""}