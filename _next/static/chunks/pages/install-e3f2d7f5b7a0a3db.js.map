{"version":3,"file":"static/chunks/pages/install-e3f2d7f5b7a0a3db.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,WACA,WACE,OAAO,EAAQ,U,6CCMvB,E,4LAAKC,GAAAA,EAAAA,EACQ,UAATC,GAAAA,YADCD,EAAAA,EAGS,WAAVE,GAAAA,aAHCF,EAAAA,EAKQ,UAATG,GAAAA,Y,CALCH,IAAAA,EAAK,KAoBV,IAiEMI,EAAQ,IAjEd,SAAMC,K,eACFC,KAAAA,YAAa,EAEbC,KAAAA,cAAiCC,E,WASjCC,KAAAA,SAAU,8B,IACAC,E,kFAAaC,EAAAA,EAAAA,IAAS,CAAEC,OAAQ,S,UAAhCF,EAAO,EAAH,KACC,C,uDAIXG,EAAAA,EAAAA,IAAY,WACR,EAAKP,YAAa,EAClB,EAAKC,SAAW,CACZO,SAAUJ,EAAKK,KACfC,MAAOhB,EAAMC,UACbgB,aAAc,EACdC,UAAWR,EAAKS,KAChBC,MAAO,M,UAITC,EAAAA,EAAAA,IAAiBX,GAClBY,YAAY,IAAIC,EAAAA,GAAYC,EAAAA,KAC5BF,YAAY,IAAIG,EAAAA,IAAeC,EAAAA,EAAAA,KAAO,SAACC,GAChCA,IAAajB,EAAKS,KAClB,EAAKZ,SAAW,CACZO,SAAUJ,EAAKK,KACfC,MAAOhB,EAAMC,UACbgB,aAAcU,EACdT,UAAWR,EAAKS,KAChBC,MAAOO,EAAWjB,EAAKS,KAAO,IAGlC,EAAKZ,SAAW,CACZO,SAAUJ,EAAKK,KACfC,MAAOhB,EAAME,WACbe,aAAcU,EACdT,UAAWR,EAAKS,KAChBC,MAAO,SAIlBQ,OAAOC,EAAAA,EAAAA,OAAAA,W,QAEZhB,EAAAA,EAAAA,IAAY,WACR,EAAKN,SAAW,CACZO,SAAUJ,EAAKK,KACfC,MAAOhB,EAAMG,UACbc,aAAcP,EAAKS,KACnBD,UAAWR,EAAKS,KAChBC,MAAO,GAEX,EAAKd,YAAa,K,4CAtDtBwB,EAAAA,EAAAA,IAAmBC,KAAM,CACrBxB,SAAUyB,EAAAA,GAAAA,IACVvB,SAAS,KAsFrB,WAAewB,EAAAA,EAAAA,KA3BW,WACtB,OACI,UAACC,EAAAA,GAAK,kBAAKC,EAAAA,IAAe,C,WACtB,SAACC,IAAI,C,UACD,SAACC,QAAK,C,SAAC,yCAGX,SAACH,EAAAA,EAAK,CAACI,YAAU,E,UACb,SAACC,EAAAA,EAAa,CACVC,UAAWX,EAAAA,EAAAA,QAAsBzB,EAAME,WACvCmC,KAAK,OACLC,QAAStC,EAAMK,YAItBL,EAAMG,WACH,SAACoC,EAAAA,EAAiB,CACdC,OAAQ,CAAEC,KAAM,CAAEC,MAAO,MACzBC,MAAO3C,EAAMG,SAASO,SACtBkC,gBAAiB5C,EAAMG,SAASa,MAChC6B,YAAajD,EAAMI,EAAMG,SAASS,kB","sources":["webpack://_N_E/?0347","webpack://_N_E/./src/pages/install.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/install\",\n      function () {\n        return require(\"private-next-pages/install.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/install\"])\n      });\n    }\n  ","import { DefaultButton, ProgressIndicator, Stack } from \"@fluentui/react\";\nimport { ADB_SYNC_MAX_PACKET_SIZE } from \"@yume-chan/adb\";\nimport { ChunkStream } from '@yume-chan/stream-extra';\nimport { action, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { GlobalState } from \"../state\";\nimport { createFileStream, pickFile, ProgressStream, RouteStackProps } from \"../utils\";\n\nenum Stage {\n    Uploading,\n\n    Installing,\n\n    Completed,\n}\n\ninterface Progress {\n    filename: string;\n\n    stage: Stage;\n\n    uploadedSize: number;\n\n    totalSize: number;\n\n    value: number | undefined;\n}\n\nclass InstallPageState {\n    installing = false;\n\n    progress: Progress | undefined = undefined;\n\n    constructor() {\n        makeAutoObservable(this, {\n            progress: observable.ref,\n            install: false,\n        });\n    }\n\n    install = async () => {\n        const file = await pickFile({ accept: '.apk' });\n        if (!file) {\n            return;\n        }\n\n        runInAction(() => {\n            this.installing = true;\n            this.progress = {\n                filename: file.name,\n                stage: Stage.Uploading,\n                uploadedSize: 0,\n                totalSize: file.size,\n                value: 0,\n            };\n        });\n\n        await createFileStream(file)\n            .pipeThrough(new ChunkStream(ADB_SYNC_MAX_PACKET_SIZE))\n            .pipeThrough(new ProgressStream(action((uploaded) => {\n                if (uploaded !== file.size) {\n                    this.progress = {\n                        filename: file.name,\n                        stage: Stage.Uploading,\n                        uploadedSize: uploaded,\n                        totalSize: file.size,\n                        value: uploaded / file.size * 0.8,\n                    };\n                } else {\n                    this.progress = {\n                        filename: file.name,\n                        stage: Stage.Installing,\n                        uploadedSize: uploaded,\n                        totalSize: file.size,\n                        value: 0.8,\n                    };\n                }\n            })))\n            .pipeTo(GlobalState.device!.install());\n\n        runInAction(() => {\n            this.progress = {\n                filename: file.name,\n                stage: Stage.Completed,\n                uploadedSize: file.size,\n                totalSize: file.size,\n                value: 1,\n            };\n            this.installing = false;\n        });\n    };\n}\n\nconst state = new InstallPageState();\n\nconst Install: NextPage = () => {\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Install APK - Android Web Toolbox</title>\n            </Head>\n\n            <Stack horizontal>\n                <DefaultButton\n                    disabled={!GlobalState.device || state.installing}\n                    text=\"Open\"\n                    onClick={state.install}\n                />\n            </Stack>\n\n            {state.progress && (\n                <ProgressIndicator\n                    styles={{ root: { width: 300 } }}\n                    label={state.progress.filename}\n                    percentComplete={state.progress.value}\n                    description={Stage[state.progress.stage]}\n                />\n            )}\n        </Stack>\n    );\n};\n\nexport default observer(Install);\n"],"names":["window","__NEXT_P","push","Stage","Uploading","Installing","Completed","state","InstallPageState","installing","progress","undefined","install","file","pickFile","accept","runInAction","filename","name","stage","uploadedSize","totalSize","size","value","createFileStream","pipeThrough","ChunkStream","ADB_SYNC_MAX_PACKET_SIZE","ProgressStream","action","uploaded","pipeTo","GlobalState","makeAutoObservable","this","observable","observer","Stack","RouteStackProps","Head","title","horizontal","DefaultButton","disabled","text","onClick","ProgressIndicator","styles","root","width","label","percentComplete","description"],"sourceRoot":""}