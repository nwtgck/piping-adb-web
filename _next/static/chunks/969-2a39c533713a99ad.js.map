{"version":3,"file":"static/chunks/969-2a39c533713a99ad.js","mappings":"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","sources":["webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.81.1_cktacisfg2p5lpuckvtl5f276a/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.base.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.81.1_cktacisfg2p5lpuckvtl5f276a/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.styles.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.81.1_cktacisfg2p5lpuckvtl5f276a/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.tsx","webpack://_N_E/FitAddon/webpack/universalModuleDefinition","webpack://_N_E/FitAddon/./src/FitAddon.ts","webpack://_N_E/FitAddon/webpack/bootstrap","webpack://_N_E/FitAddon/webpack/startup","webpack://_N_E/SearchAddon/webpack/universalModuleDefinition","webpack://_N_E/SearchAddon/./src/SearchAddon.ts","webpack://_N_E/SearchAddon/../../src/common/EventEmitter.ts","webpack://_N_E/SearchAddon/webpack/bootstrap","webpack://_N_E/SearchAddon/webpack/startup","webpack://_N_E/WebglAddon/webpack/universalModuleDefinition","webpack://_N_E/WebglAddon/./src/GlyphRenderer.ts","webpack://_N_E/WebglAddon/./src/RectangleRenderer.ts","webpack://_N_E/WebglAddon/./src/RenderModel.ts","webpack://_N_E/WebglAddon/./src/WebglRenderer.ts","webpack://_N_E/WebglAddon/./src/WebglUtils.ts","webpack://_N_E/WebglAddon/./src/atlas/CharAtlasCache.ts","webpack://_N_E/WebglAddon/./src/atlas/CharAtlasUtils.ts","webpack://_N_E/WebglAddon/./src/atlas/WebglCharAtlas.ts","webpack://_N_E/WebglAddon/./src/renderLayer/BaseRenderLayer.ts","webpack://_N_E/WebglAddon/./src/renderLayer/CursorRenderLayer.ts","webpack://_N_E/WebglAddon/./src/renderLayer/LinkRenderLayer.ts","webpack://_N_E/WebglAddon/../../src/browser/Lifecycle.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/CustomGlyphs.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/RendererUtils.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/atlas/Constants.ts","webpack://_N_E/WebglAddon/../../src/common/Color.ts","webpack://_N_E/WebglAddon/../../src/common/EventEmitter.ts","webpack://_N_E/WebglAddon/../../src/common/Lifecycle.ts","webpack://_N_E/WebglAddon/../../src/common/Platform.ts","webpack://_N_E/WebglAddon/../../src/common/TypedArrayUtils.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/AttributeData.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/CellData.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/Constants.ts","webpack://_N_E/WebglAddon/../../src/common/input/TextDecoder.ts","webpack://_N_E/WebglAddon/webpack/bootstrap","webpack://_N_E/WebglAddon/./src/WebglAddon.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_create_class.mjs"],"sourcesContent":["import * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles, ISearchBox } from './SearchBox.types';\nimport type { IButtonProps, IButtonStyles } from '../../Button';\nimport type { IIconProps } from '../../Icon';\n\nconst COMPONENT_NAME = 'SearchBox';\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nconst iconButtonProps: IIconProps = { iconName: 'Clear' };\nconst defaultClearButtonProps: IButtonProps = { ariaLabel: 'Clear text' };\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\n\nconst useComponentRef = (\n  componentRef: React.Ref<ISearchBox> | undefined,\n  inputElementRef: React.RefObject<HTMLInputElement>,\n  hasFocus: boolean,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus: () => inputElementRef.current?.focus(),\n      hasFocus: () => hasFocus,\n    }),\n    [inputElementRef, hasFocus],\n  );\n};\n\nexport const SearchBoxBase: React.FunctionComponent<ISearchBoxProps> = React.forwardRef<\n  HTMLDivElement,\n  ISearchBoxProps\n>((props, forwardedRef) => {\n  const {\n    ariaLabel,\n    className,\n    defaultValue = '',\n    disabled,\n    underlined,\n    styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = labelText,\n    theme,\n    clearButtonProps = defaultClearButtonProps,\n    disableAnimation = false,\n    showIcon = false,\n    onClear: customOnClear,\n    onBlur: customOnBlur,\n    onEscape: customOnEscape,\n    onSearch: customOnSearch,\n    onKeyDown: customOnKeyDown,\n    iconProps,\n    role,\n    onChange,\n    // eslint-disable-next-line deprecation/deprecation\n    onChanged,\n  } = props;\n\n  const [hasFocus, setHasFocus] = React.useState(false);\n\n  const prevChangeTimestamp = React.useRef<number | undefined>();\n  const [uncastValue, setValue] = useControllableValue(\n    props.value,\n    defaultValue,\n    (ev: React.ChangeEvent<HTMLInputElement> | undefined, newValue: string) => {\n      if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n        // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n        // outside a major version due to potential to break partners' tests and possibly apps).\n        // Only call props.onChange for one of the events.\n        return;\n      }\n      prevChangeTimestamp.current = ev?.timeStamp;\n      onChange?.(ev, newValue);\n      onChanged?.(newValue);\n    },\n  );\n  const value = String(uncastValue);\n\n  const rootElementRef = React.useRef<HTMLDivElement>(null);\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  const id = useId(COMPONENT_NAME, props.id);\n\n  const { onClick: customOnClearClick } = clearButtonProps;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    underlined,\n    hasFocus,\n    disabled,\n    hasInput: value.length > 0,\n    disableAnimation,\n    showIcon,\n  });\n\n  const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(props, inputProperties, [\n    'className',\n    'placeholder',\n    'onFocus',\n    'onBlur',\n    'value',\n    'role',\n  ]);\n\n  const onClear = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) => {\n      customOnClear?.(ev);\n      if (!ev.defaultPrevented) {\n        setValue('');\n        inputElementRef.current?.focus();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    },\n    [customOnClear, setValue],\n  );\n\n  const onClearClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      customOnClearClick?.(ev);\n      if (!ev.defaultPrevented) {\n        onClear(ev);\n      }\n    },\n    [customOnClearClick, onClear],\n  );\n\n  const onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    setHasFocus(true);\n    props.onFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n  };\n\n  const onClickFocus = () => {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  const onBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement>): void => {\n      setHasFocus(false);\n      customOnBlur?.(ev);\n    },\n    [customOnBlur],\n  );\n\n  const onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value, ev);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape?.(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown?.(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n\n  return (\n    <div role={role} ref={mergedRootRef} className={classNames.root} onFocusCapture={onFocusCapture}>\n      <div className={classNames.iconContainer} onClick={onClickFocus} aria-hidden>\n        <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n      </div>\n      <input\n        {...nativeProps}\n        id={id}\n        className={classNames.field}\n        placeholder={placeholder}\n        onChange={onInputChange}\n        onInput={onInputChange}\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n        value={value}\n        disabled={disabled}\n        role=\"searchbox\"\n        aria-label={ariaLabel}\n        ref={inputElementRef}\n      />\n      {value!.length > 0 && (\n        <div className={classNames.clearButton}>\n          <IconButton\n            onBlur={onBlur}\n            styles={iconButtonStyles}\n            iconProps={iconButtonProps}\n            {...clearButtonProps}\n            onClick={onClearClick}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props: ISearchBoxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: { labelText: 'placeholder' },\n    });\n  }\n}\n","import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation, showIcon } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      showIcon && [\n        {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 32,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 1,\n            },\n          },\n        },\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n      showIcon &&\n        hasFocus && {\n          width: 32,\n        },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n      showIcon &&\n        hasFocus && {\n          opacity: 1,\n        },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implemented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { SearchBoxBase } from './SearchBox.base';\nimport { getStyles } from './SearchBox.styles';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nexport const SearchBox: React.FunctionComponent<ISearchBoxProps> = styled<\n  ISearchBoxProps,\n  ISearchBoxStyleProps,\n  ISearchBoxStyles\n>(SearchBoxBase, getStyles, undefined, { scope: 'SearchBox' });\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IDisposable, ITerminalAddon, ISelectionPosition, IDecoration } from 'xterm';\nimport { EventEmitter } from 'common/EventEmitter';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n  decorations?: ISearchDecorationOptions;\n  noScroll?: boolean;\n}\n\ninterface ISearchDecorationOptions {\n  matchBackground?: string;\n  matchBorder?: string;\n  matchOverviewRuler: string;\n  activeMatchBackground?: string;\n  activeMatchBorder?: string;\n  activeMatchColorOverviewRuler: string;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n  size: number;\n}\n\ntype LineCacheEntry = [\n  /**\n   * The string representation of a line (as opposed to the buffer cell representation).\n   */\n  lineAsString: string,\n  /**\n   * The offsets where each line starts when the entry describes a wrapped line.\n   */\n  lineOffsets: number[]\n];\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\n\nexport class SearchAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n  private _cachedSearchTerm: string | undefined;\n  private _selectedDecoration: IDecoration | undefined;\n  private _resultDecorations: Map<number, IDecoration[]> | undefined;\n  private _searchResults: Map<string, ISearchResult> | undefined;\n  private _onDataDisposable: IDisposable | undefined;\n  private _onResizeDisposable: IDisposable | undefined;\n  private _lastSearchOptions: ISearchOptions | undefined;\n  private _highlightTimeout: number | undefined;\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: LineCacheEntry[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  private _resultIndex: number | undefined;\n\n  private readonly _onDidChangeResults = new EventEmitter<{ resultIndex: number, resultCount: number } | undefined>();\n  public readonly onDidChangeResults = this._onDidChangeResults.event;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n    this._onDataDisposable = this._terminal.onWriteParsed(() => this._updateMatches());\n    this._onResizeDisposable = this._terminal.onResize(() => this._updateMatches());\n  }\n\n  private _updateMatches(): void {\n    if (this._highlightTimeout) {\n      window.clearTimeout(this._highlightTimeout);\n    }\n    if (this._cachedSearchTerm && this._lastSearchOptions?.decorations) {\n      this._highlightTimeout = setTimeout(() => {\n        this.findPrevious(this._cachedSearchTerm!, { ...this._lastSearchOptions, incremental: true, noScroll: true });\n        this._resultIndex = this._searchResults ? this._searchResults.size - 1 : -1;\n        this._onDidChangeResults.fire({ resultIndex: this._resultIndex, resultCount: this._searchResults?.size ?? -1 });\n      }, 200);\n    }\n  }\n\n  public dispose(): void {\n    this.clearDecorations();\n    this._onDataDisposable?.dispose();\n    this._onResizeDisposable?.dispose();\n  }\n\n  public clearDecorations(retainCachedSearchTerm?: boolean): void {\n    this._selectedDecoration?.dispose();\n    this._searchResults?.clear();\n    this._resultDecorations?.forEach(decorations => {\n      for (const d of decorations) {\n        d.dispose();\n      }\n    });\n    this._resultDecorations?.clear();\n    this._searchResults = undefined;\n    this._resultDecorations = undefined;\n    if (!retainCachedSearchTerm) {\n      this._cachedSearchTerm = undefined;\n    }\n  }\n\n  public clearActiveDecoration(): void {\n    this._selectedDecoration?.dispose();\n    this._selectedDecoration = undefined;\n  }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined || this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n    return this._fireResults(term, this._findNextAndSelect(term, searchOptions), searchOptions);\n  }\n\n  private _highlightAllMatches(term: string, searchOptions: ISearchOptions): void {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    if (!term || term.length === 0) {\n      this.clearDecorations();\n      return;\n    }\n    searchOptions = searchOptions || {};\n\n    // new search, clear out the old decorations\n    this.clearDecorations(true);\n    this._searchResults = new Map<string, ISearchResult>();\n    this._resultDecorations = new Map<number, IDecoration[]>();\n    const resultDecorations = this._resultDecorations;\n    let result = this._find(term, 0, 0, searchOptions);\n    while (result && !this._searchResults.get(`${result.row}-${result.col}`)) {\n      this._searchResults.set(`${result.row}-${result.col}`, result);\n      result = this._find(\n        term,\n        result.col + result.term.length >= this._terminal.cols ? result.row + 1 : result.row,\n        result.col + result.term.length >= this._terminal.cols ? 0 : result.col + 1,\n        searchOptions\n      );\n      if (this._searchResults.size > 1000) {\n        this.clearDecorations();\n        this._resultIndex = undefined;\n        return;\n      }\n    }\n    this._searchResults.forEach(result => {\n      const resultDecoration = this._createResultDecoration(result, searchOptions.decorations!);\n      if (resultDecoration) {\n        const decorationsForLine = resultDecorations.get(resultDecoration.marker.line) || [];\n        decorationsForLine.push(resultDecoration);\n        resultDecorations.set(resultDecoration.marker.line, decorationsForLine);\n      }\n    });\n  }\n\n  private _find(term: string, startRow: number, startCol: number, searchOptions?: ISearchOptions): ISearchResult | undefined {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return undefined;\n    }\n    if (startCol > this._terminal.cols) {\n      throw new Error(`Invalid col: ${startCol} to search in terminal of ${this._terminal.cols} cols`);\n    }\n\n    let result: ISearchResult | undefined = undefined;\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    return result;\n  }\n\n  private _findNextAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      this._cachedSearchTerm = undefined;\n      this._resultIndex = -1;\n      return false;\n    }\n\n    if (this._cachedSearchTerm !== term) {\n      this._resultIndex = undefined;\n      this._terminal.clearSelection();\n    }\n\n    let startCol = 0;\n    let startRow = 0;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      const incremental = searchOptions ? searchOptions.incremental : false;\n      // Start from the selection end if there is a selection\n      // For incremental search, use existing row\n      currentSelection = this._terminal.getSelectionPosition()!;\n      startRow = incremental ? currentSelection.startRow : currentSelection.endRow;\n      startCol = incremental ? currentSelection.startColumn : currentSelection.endColumn;\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, wrap back and return selection if it exists.\n    if (!result && currentSelection) {\n      searchPosition.startRow = currentSelection.startRow;\n      searchPosition.startCol = 0;\n      result = this._findInLine(term, searchPosition, searchOptions);\n    }\n\n    if (this._searchResults) {\n      if (this._searchResults.size === 0) {\n        this._resultIndex = -1;\n      } else if (this._resultIndex === undefined) {\n        this._resultIndex = 0;\n      } else {\n        this._resultIndex++;\n        if (this._resultIndex >= this._searchResults.size) {\n          this._resultIndex = 0;\n        }\n      }\n    }\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined || this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n    return this._fireResults(term, this._findPreviousAndSelect(term, searchOptions), searchOptions);\n  }\n\n  private _fireResults(term: string, found: boolean, searchOptions?: ISearchOptions): boolean {\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined && this._searchResults?.size !== undefined) {\n        this._onDidChangeResults.fire({ resultIndex: this._resultIndex, resultCount: this._searchResults.size });\n      } else {\n        this._onDidChangeResults.fire(undefined);\n      }\n    }\n    this._cachedSearchTerm = term;\n    return found;\n  }\n\n  private _findPreviousAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    let result: ISearchResult | undefined;\n    if (!this._terminal || !term || term.length === 0) {\n      result = undefined;\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      this._resultIndex = -1;\n      return false;\n    }\n\n    if (this._cachedSearchTerm !== term) {\n      this._resultIndex = undefined;\n      this._terminal.clearSelection();\n    }\n\n    let startRow = this._terminal.buffer.active.baseY + this._terminal.rows;\n    let startCol = this._terminal.cols;\n    const isReverseSearch = true;\n\n    const incremental = searchOptions ? searchOptions.incremental : false;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      currentSelection = this._terminal.getSelectionPosition()!;\n      // Start from selection start if there is a selection\n      startRow = currentSelection.startRow;\n      startCol = currentSelection.startColumn;\n    }\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    if (incremental) {\n      // Try to expand selection to right first.\n      result = this._findInLine(term, searchPosition, searchOptions, false);\n      const isOldResultHighlighted = result && result.row === startRow && result.col === startCol;\n      if (!isOldResultHighlighted) {\n        // If selection was not able to be expanded to the right, then try reverse search\n        if (currentSelection) {\n          searchPosition.startRow = currentSelection.endRow;\n          searchPosition.startCol = currentSelection.endColumn;\n        }\n        result = this._findInLine(term, searchPosition, searchOptions, true);\n      }\n    } else {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.active.baseY + this._terminal.rows)) {\n      for (let y = (this._terminal.buffer.active.baseY + this._terminal.rows); y >= startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    if (this._searchResults) {\n      if (this._searchResults.size === 0) {\n        this._resultIndex = -1;\n      } else if (this._resultIndex === undefined || this._resultIndex < 0) {\n        this._resultIndex = this._searchResults.size - 1;\n      } else {\n        this._resultIndex--;\n        if (this._resultIndex === -1) {\n          this._resultIndex = this._searchResults.size - 1;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.active.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return ((searchIndex === 0) || (NON_WORD_CHARACTERS.includes(line[searchIndex - 1]))) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.includes(line[searchIndex + term.length])));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line, which may contain\n   * subsequent terminal lines if the text is wrapped. If the provided line number is part of a wrapped text line that\n   * started on an earlier line then it is skipped since it will be properly searched when the terminal line that the\n   * text starts on is searched.\n   * @param term The search term.\n   * @param position The position to start the search.\n   * @param searchOptions Search options.\n   * @param isReverseSearch Whether the search should start from the right side of the terminal and search to the left.\n   * @return The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    const row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.active.getLine(row);\n    if (firstLine?.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let cache = this._linesCache?.[row];\n    if (!cache) {\n      cache = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = cache;\n      }\n    }\n    const [stringLine, offsets] = cache;\n\n    const offset = this._bufferColsToStringOffset(row, col);\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..offset\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, offset))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(offset));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = offset + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (offset - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, offset - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, offset);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple rows\n      let startRowOffset = 0;\n      while (startRowOffset < offsets.length - 1 && resultIndex >= offsets[startRowOffset + 1]) {\n        startRowOffset++;\n      }\n      let endRowOffset = startRowOffset;\n      while (endRowOffset < offsets.length - 1 && resultIndex + term.length >= offsets[endRowOffset + 1]) {\n        endRowOffset++;\n      }\n      const startColOffset = resultIndex - offsets[startRowOffset];\n      const endColOffset = resultIndex + term.length - offsets[endRowOffset];\n      const startColIndex = this._stringLengthToBufferSize(row + startRowOffset, startColOffset);\n      const endColIndex = this._stringLengthToBufferSize(row + endRowOffset, endColOffset);\n      const size = endColIndex - startColIndex + terminal.cols * (endRowOffset - startRowOffset);\n\n      return {\n        term,\n        col: startColIndex,\n        row: row + startRowOffset,\n        size\n      };\n    }\n  }\n\n  private _stringLengthToBufferSize(row: number, offset: number): number {\n    const line = this._terminal!.buffer.active.getLine(row);\n    if (!line) {\n      return 0;\n    }\n    for (let i = 0; i < offset; i++) {\n      const cell = line.getCell(i);\n      if (!cell) {\n        break;\n      }\n      // Adjust the searchIndex to normalize emoji into single chars\n      const char = cell.getChars();\n      if (char.length > 1) {\n        offset -= char.length - 1;\n      }\n      // Adjust the searchIndex for empty characters following wide unicode\n      // chars (eg. CJK)\n      const nextCell = line.getCell(i + 1);\n      if (nextCell && nextCell.getWidth() === 0) {\n        offset++;\n      }\n    }\n    return offset;\n  }\n\n  private _bufferColsToStringOffset(startRow: number, cols: number): number {\n    const terminal = this._terminal!;\n    let lineIndex = startRow;\n    let offset = 0;\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (cols > 0 && line) {\n      for (let i = 0; i < cols && i < terminal.cols; i++) {\n        const cell = line.getCell(i);\n        if (!cell) {\n          break;\n        }\n        if (cell.getWidth()) {\n          // Treat null characters as whitespace to align with the translateToString API\n          offset += cell.getCode() === 0 ? 1 : cell.getChars().length;\n        }\n      }\n      lineIndex++;\n      line = terminal.buffer.active.getLine(lineIndex);\n      if (line && !line.isWrapped) {\n        break;\n      }\n      cols -= terminal.cols;\n    }\n    return offset;\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): LineCacheEntry {\n    const terminal = this._terminal!;\n    const strings = [];\n    const lineOffsets = [0];\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (line) {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      const lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      let string = line.translateToString(!lineWrapsToNext && trimRight);\n      if (lineWrapsToNext && nextLine) {\n        const lastCell = line.getCell(line.length - 1);\n        const lastCellIsNull = lastCell && lastCell.getCode() === 0 && lastCell.getWidth() === 1;\n        // a wide character wrapped to the next line\n        if (lastCellIsNull && nextLine.getCell(0)?.getWidth() === 2) {\n          string = string.slice(0, -1);\n        }\n      }\n      strings.push(string);\n      if (lineWrapsToNext) {\n        lineOffsets.push(lineOffsets[lineOffsets.length - 1] + string.length);\n      } else {\n        break;\n      }\n      lineIndex++;\n      line = nextLine;\n    }\n    return [strings.join(''), lineOffsets];\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @return Whether a result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined, options?: ISearchDecorationOptions, noScroll?: boolean): boolean {\n    const terminal = this._terminal!;\n    this.clearActiveDecoration();\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.size);\n    if (options) {\n      const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n      if (marker) {\n        this._selectedDecoration = terminal.registerDecoration({\n          marker,\n          x: result.col,\n          width: result.size,\n          backgroundColor: options.activeMatchBackground,\n          layer: 'top',\n          overviewRulerOptions: {\n            color: options.activeMatchColorOverviewRuler\n          }\n        });\n        this._selectedDecoration?.onRender((e) => this._applyStyles(e, options.activeMatchBorder, true));\n        this._selectedDecoration?.onDispose(() => marker.dispose());\n      }\n    }\n\n    if (!noScroll) {\n      // If it is not in the viewport then we scroll else it just gets selected\n      if (result.row >= (terminal.buffer.active.viewportY + terminal.rows) || result.row < terminal.buffer.active.viewportY) {\n        let scroll = result.row - terminal.buffer.active.viewportY;\n        scroll -= Math.floor(terminal.rows / 2);\n        terminal.scrollLines(scroll);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Applies styles to the decoration when it is rendered\n   * @param element the decoration's element\n   * @param backgroundColor the background color to apply\n   * @param borderColor the border color to apply\n   * @returns\n   */\n  private _applyStyles(element: HTMLElement, borderColor: string | undefined, isActiveResult: boolean): void {\n    if (element.clientWidth <= 0) {\n      return;\n    }\n    if (!element.classList.contains('xterm-find-result-decoration')) {\n      element.classList.add('xterm-find-result-decoration');\n      if (borderColor) {\n        element.style.outline = `1px solid ${borderColor}`;\n      }\n    }\n    if (isActiveResult) {\n      element.classList.add('xterm-find-active-result-decoration');\n    }\n  }\n\n  /**\n   * Creates a decoration for the result and applies styles\n   * @param result the search result for which to create the decoration\n   * @param options the options for the decoration\n   * @returns the {@link IDecoration} or undefined if the marker has already been disposed of\n   */\n  private _createResultDecoration(result: ISearchResult, options: ISearchDecorationOptions): IDecoration | undefined {\n    const terminal = this._terminal!;\n    const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n    if (!marker) {\n      return undefined;\n    }\n    const findResultDecoration = terminal.registerDecoration({\n      marker,\n      x: result.col,\n      width: result.size,\n      backgroundColor: options.matchBackground,\n      overviewRulerOptions: this._resultDecorations?.get(marker.line) ? undefined : {\n        color: options.matchOverviewRuler,\n        position: 'center'\n      }\n    });\n    findResultDecoration?.onRender((e) => this._applyStyles(e, options.matchBorder, false));\n    findResultDecoration?.onDispose(() => marker.dispose());\n    return findResultDecoration;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(258);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebglAddon\"] = factory();\n\telse\n\t\troot[\"WebglAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { IWebGL2RenderingContext, IWebGLVertexArrayObject, IRenderModel, IRasterizedGlyph } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal, IBufferLine } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\ninterface IVertices {\n  attributes: Float32Array;\n  /**\n   * These buffers are the ones used to bind to WebGL, the reason there are\n   * multiple is to allow double buffering to work as you cannot modify the\n   * buffer while it's being used by the GPU. Having multiple lets us start\n   * working on the next frame.\n   */\n  attributesBuffers: Float32Array[];\n  count: number;\n}\n\nconst enum VertexAttribLocations {\n  UNIT_QUAD = 0,\n  CELL_POSITION = 1,\n  OFFSET = 2,\n  SIZE = 3,\n  TEXCOORD = 4,\n  TEXSIZE = 5\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\nlayout (location = ${VertexAttribLocations.CELL_POSITION}) in vec2 a_cellpos;\nlayout (location = ${VertexAttribLocations.OFFSET}) in vec2 a_offset;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.TEXCOORD}) in vec2 a_texcoord;\nlayout (location = ${VertexAttribLocations.TEXSIZE}) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\n\nuniform sampler2D u_texture;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = texture(u_texture, v_texcoord);\n}`;\n\nconst INDICES_PER_CELL = 10;\nconst BYTES_PER_CELL = INDICES_PER_CELL * Float32Array.BYTES_PER_ELEMENT;\nconst CELL_POSITION_INDICES = 2;\n\nexport class GlyphRenderer {\n  private _atlas: WebglCharAtlas | undefined;\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _projectionLocation: WebGLUniformLocation;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _textureLocation: WebGLUniformLocation;\n  private _atlasTexture: WebGLTexture;\n  private _attributesBuffer: WebGLBuffer;\n  private _activeBuffer: number = 0;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(0),\n    attributesBuffers: [\n      new Float32Array(0),\n      new Float32Array(0)\n    ]\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    const gl = this._gl;\n    const program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this._program = program;\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._textureLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_texture'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertuces to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.OFFSET);\n    gl.vertexAttribPointer(VertexAttribLocations.OFFSET, 2, gl.FLOAT, false, BYTES_PER_CELL, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.OFFSET, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXCOORD);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXCOORD, 2, gl.FLOAT, false, BYTES_PER_CELL, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXCOORD, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXSIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXSIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 6 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXSIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.CELL_POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.CELL_POSITION, 2, gl.FLOAT, false, BYTES_PER_CELL, 8 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.CELL_POSITION, 1);\n\n    // Setup empty texture atlas\n    this._atlasTexture = throwIfFalsy(gl.createTexture());\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    // Allow drawing of transparent texture\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set viewport\n    this.onResize();\n  }\n\n  public beginFrame(): boolean {\n    return this._atlas ? this._atlas.beginFrame() : true;\n  }\n\n  public updateCell(x: number, y: number, code: number, bg: number, fg: number, chars: string): void {\n    this._updateCell(this._vertices.attributes, x, y, code, bg, fg, chars);\n  }\n\n  private _updateCell(array: Float32Array, x: number, y: number, code: number | undefined, bg: number, fg: number, chars?: string): void {\n    const terminal = this._terminal;\n\n    const i = (y * terminal.cols + x) * INDICES_PER_CELL;\n\n    // Exit early if this is a null character, allow space character to continue as it may have\n    // underline/strikethrough styles\n    if (code === NULL_CELL_CODE || code === undefined/* This is used for the right side of wide chars */) {\n      fill(array, 0, i, i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    let rasterizedGlyph: IRasterizedGlyph;\n    if (!this._atlas) {\n      return;\n    }\n\n    // Get the glyph\n    if (chars && chars.length > 1) {\n      rasterizedGlyph = this._atlas.getRasterizedGlyphCombinedChar(chars, bg, fg);\n    } else {\n      rasterizedGlyph = this._atlas.getRasterizedGlyph(code, bg, fg);\n    }\n\n    // Fill empty if no glyph was found\n    if (!rasterizedGlyph) {\n      fill(array, 0, i, i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    // a_origin\n    array[i    ] = -rasterizedGlyph.offset.x + this._dimensions.scaledCharLeft;\n    array[i + 1] = -rasterizedGlyph.offset.y + this._dimensions.scaledCharTop;\n    // a_size\n    array[i + 2] = rasterizedGlyph.size.x / this._dimensions.scaledCanvasWidth;\n    array[i + 3] = rasterizedGlyph.size.y / this._dimensions.scaledCanvasHeight;\n    // a_texcoord\n    array[i + 4] = rasterizedGlyph.texturePositionClipSpace.x;\n    array[i + 5] = rasterizedGlyph.texturePositionClipSpace.y;\n    // a_texsize\n    array[i + 6] = rasterizedGlyph.sizeClipSpace.x;\n    array[i + 7] = rasterizedGlyph.sizeClipSpace.y;\n    // a_cellpos only changes on resize\n  }\n\n  public clear(force?: boolean): void {\n    const terminal = this._terminal;\n    const newCount = terminal.cols * terminal.rows * INDICES_PER_CELL;\n\n    // Don't clear if not forced and the array length is correct\n    if (!force && this._vertices.count === newCount) {\n      return;\n    }\n\n    // Clear vertices\n    this._vertices.count = newCount;\n    this._vertices.attributes = new Float32Array(newCount);\n    for (let i = 0; i < this._vertices.attributesBuffers.length; i++) {\n      this._vertices.attributesBuffers[i] = new Float32Array(newCount);\n    }\n    let i = 0;\n    for (let y = 0; y < terminal.rows; y++) {\n      for (let x = 0; x < terminal.cols; x++) {\n        this._vertices.attributes[i + 8] = x / terminal.cols;\n        this._vertices.attributes[i + 9] = y / terminal.rows;\n        i += INDICES_PER_CELL;\n      }\n    }\n  }\n\n  public onResize(): void {\n    const gl = this._gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    this.clear();\n  }\n\n  public setColors(): void {\n  }\n\n  public render(renderModel: IRenderModel): void {\n    if (!this._atlas) {\n      return;\n    }\n\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Alternate buffers each frame as the active buffer gets locked while it's in use by the GPU\n    this._activeBuffer = (this._activeBuffer + 1) % 2;\n    const activeBuffer = this._vertices.attributesBuffers[this._activeBuffer];\n\n    // Copy data for each cell of each line up to its line length (the last non-whitespace cell)\n    // from the attributes buffer into activeBuffer, which is the one that gets bound to the GPU.\n    // The reasons for this are as follows:\n    // - So the active buffer can be alternated so we don't get blocked on rendering finishing\n    // - To copy either the normal attributes buffer or the selection attributes buffer when there\n    //   is a selection\n    // - So we don't send vertices for all the line-ending whitespace to the GPU\n    let bufferLength = 0;\n    for (let y = 0; y < renderModel.lineLengths.length; y++) {\n      const si = y * this._terminal.cols * INDICES_PER_CELL;\n      const sub = this._vertices.attributes.subarray(si, si + renderModel.lineLengths[y] * INDICES_PER_CELL);\n      activeBuffer.set(sub, bufferLength);\n      bufferLength += sub.length;\n    }\n\n    // Bind the attributes buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, activeBuffer.subarray(0, bufferLength), gl.STREAM_DRAW);\n\n    // Bind the texture atlas if it's changed\n    if (this._atlas.hasCanvasChanged) {\n      this._atlas.hasCanvasChanged = false;\n      gl.uniform1i(this._textureLocation, 0);\n      gl.activeTexture(gl.TEXTURE0 + 0);\n      gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._atlas.cacheCanvas);\n      gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    // Set uniforms\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Draw the viewport\n    gl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, bufferLength / INDICES_PER_CELL);\n  }\n\n  public setAtlas(atlas: WebglCharAtlas): void {\n    const gl = this._gl;\n    this._atlas = atlas;\n\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, atlas.cacheCanvas);\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, expandFloat32Array, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { IRenderModel, IWebGLVertexArrayObject, IWebGL2RenderingContext } from './Types';\nimport { Attributes, FgFlags } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IColor } from 'common/Types';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\n\nconst enum VertexAttribLocations {\n  POSITION = 0,\n  SIZE = 1,\n  COLOR = 2,\n  UNIT_QUAD = 3\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.POSITION}) in vec2 a_position;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.COLOR}) in vec4 a_color;\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = (a_position + (a_unitquad * a_size)) / u_resolution;\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}`;\n\ninterface IVertices {\n  attributes: Float32Array;\n  count: number;\n}\n\nconst INDICES_PER_RECTANGLE = 8;\nconst BYTES_PER_RECTANGLE = INDICES_PER_RECTANGLE * Float32Array.BYTES_PER_ELEMENT;\n\nconst INITIAL_BUFFER_RECTANGLE_CAPACITY = 20 * INDICES_PER_RECTANGLE;\n\nexport class RectangleRenderer {\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _attributesBuffer: WebGLBuffer;\n  private _projectionLocation: WebGLUniformLocation;\n  private _bgFloat!: Float32Array;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(INITIAL_BUFFER_RECTANGLE_CAPACITY)\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    const gl = this._gl;\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n\n    // Uniform locations\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertuces to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.POSITION, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.POSITION, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.COLOR);\n    gl.vertexAttribPointer(VertexAttribLocations.COLOR, 4, gl.FLOAT, false, BYTES_PER_RECTANGLE, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.COLOR, 1);\n\n    this._updateCachedColors();\n  }\n\n  public render(): void {\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Bind attributes buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertices.attributes, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, this._vertices.count);\n  }\n\n  public onResize(): void {\n    this._updateViewportRectangle();\n  }\n\n  public setColors(): void {\n    this._updateCachedColors();\n    this._updateViewportRectangle();\n  }\n\n  private _updateCachedColors(): void {\n    this._bgFloat = this._colorToFloat32Array(this._colors.background);\n  }\n\n  private _updateViewportRectangle(): void {\n    // Set first rectangle that clears the screen\n    this._addRectangleFloat(\n      this._vertices.attributes,\n      0,\n      0,\n      0,\n      this._terminal.cols * this._dimensions.scaledCellWidth,\n      this._terminal.rows * this._dimensions.scaledCellHeight,\n      this._bgFloat\n    );\n  }\n\n  public updateBackgrounds(model: IRenderModel): void {\n    const terminal = this._terminal;\n    const vertices = this._vertices;\n\n    let rectangleCount = 1;\n\n    for (let y = 0; y < terminal.rows; y++) {\n      let currentStartX = -1;\n      let currentBg = 0;\n      let currentFg = 0;\n      let currentInverse = false;\n      for (let x = 0; x < terminal.cols; x++) {\n        const modelIndex = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n        const bg = model.cells[modelIndex + RENDER_MODEL_BG_OFFSET];\n        const fg = model.cells[modelIndex + RENDER_MODEL_FG_OFFSET];\n        const inverse = !!(fg & FgFlags.INVERSE);\n        if (bg !== currentBg || (fg !== currentFg && (currentInverse || inverse))) {\n          // A rectangle needs to be drawn if going from non-default to another color\n          if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n            const offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n            this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, x, y);\n          }\n          currentStartX = x;\n          currentBg = bg;\n          currentFg = fg;\n          currentInverse = inverse;\n        }\n      }\n      // Finish rectangle if it's still going\n      if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n        const offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n        this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, terminal.cols, y);\n      }\n    }\n    vertices.count = rectangleCount;\n  }\n\n  private _updateRectangle(vertices: IVertices, offset: number, fg: number, bg: number, startX: number, endX: number, y: number): void {\n    let rgba: number | undefined;\n    if (fg & FgFlags.INVERSE) {\n      switch (fg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          rgba = this._colors.ansi[fg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          rgba = (fg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          rgba = this._colors.foreground.rgba;\n      }\n    } else {\n      switch (bg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          rgba = this._colors.ansi[bg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          rgba = (bg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          rgba = this._colors.background.rgba;\n      }\n    }\n\n    if (vertices.attributes.length < offset + 4) {\n      vertices.attributes = expandFloat32Array(vertices.attributes, this._terminal.rows * this._terminal.cols * INDICES_PER_RECTANGLE);\n    }\n    const x1 = startX * this._dimensions.scaledCellWidth;\n    const y1 = y * this._dimensions.scaledCellHeight;\n    const r = ((rgba >> 24) & 0xFF) / 255;\n    const g = ((rgba >> 16) & 0xFF) / 255;\n    const b = ((rgba >> 8 ) & 0xFF) / 255;\n\n    this._addRectangle(vertices.attributes, offset, x1, y1, (endX - startX) * this._dimensions.scaledCellWidth, this._dimensions.scaledCellHeight, r, g, b, 1);\n  }\n\n  private _addRectangle(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, r: number, g: number, b: number, a: number): void {\n    array[offset    ] = x1;\n    array[offset + 1] = y1;\n    array[offset + 2] = width;\n    array[offset + 3] = height;\n    array[offset + 4] = r;\n    array[offset + 5] = g;\n    array[offset + 6] = b;\n    array[offset + 7] = a;\n  }\n\n  private _addRectangleFloat(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, color: Float32Array): void {\n    array[offset    ] = x1;\n    array[offset + 1] = y1;\n    array[offset + 2] = width;\n    array[offset + 3] = height;\n    array[offset + 4] = color[0];\n    array[offset + 5] = color[1];\n    array[offset + 6] = color[2];\n    array[offset + 7] = color[3];\n  }\n\n  private _colorToFloat32Array(color: IColor): Float32Array {\n    return new Float32Array([\n      ((color.rgba >> 24) & 0xFF) / 255,\n      ((color.rgba >> 16) & 0xFF) / 255,\n      ((color.rgba >> 8 ) & 0xFF) / 255,\n      ((color.rgba      ) & 0xFF) / 255\n    ]);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderModel, ISelectionRenderModel } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const RENDER_MODEL_INDICIES_PER_CELL = 3;\nexport const RENDER_MODEL_BG_OFFSET = 1;\nexport const RENDER_MODEL_FG_OFFSET = 2;\n\nexport const COMBINED_CHAR_BIT_MASK = 0x80000000;\n\nexport class RenderModel implements IRenderModel {\n  public cells: Uint32Array;\n  public lineLengths: Uint32Array;\n  public selection: ISelectionRenderModel;\n\n  constructor() {\n    this.cells = new Uint32Array(0);\n    this.lineLengths = new Uint32Array(0);\n    this.selection = {\n      hasSelection: false,\n      columnSelectMode: false,\n      viewportStartRow: 0,\n      viewportEndRow: 0,\n      viewportCappedStartRow: 0,\n      viewportCappedEndRow: 0,\n      startCol: 0,\n      endCol: 0\n    };\n  }\n\n  public resize(cols: number, rows: number): void {\n    const indexCount = cols * rows * RENDER_MODEL_INDICIES_PER_CELL;\n    if (indexCount !== this.cells.length) {\n      this.cells = new Uint32Array(indexCount);\n      this.lineLengths = new Uint32Array(rows);\n    }\n  }\n\n  public clear(): void {\n    fill(this.cells, 0, 0);\n    fill(this.lineLengths, 0, 0);\n  }\n\n  public clearSelection(): void {\n    this.selection.hasSelection = false;\n    this.selection.viewportStartRow = 0;\n    this.selection.viewportEndRow = 0;\n    this.selection.viewportCappedStartRow = 0;\n    this.selection.viewportCappedEndRow = 0;\n    this.selection.startCol = 0;\n    this.selection.endCol = 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { GlyphRenderer } from './GlyphRenderer';\nimport { LinkRenderLayer } from './renderLayer/LinkRenderLayer';\nimport { CursorRenderLayer } from './renderLayer/CursorRenderLayer';\nimport { acquireCharAtlas } from './atlas/CharAtlasCache';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { RectangleRenderer } from './RectangleRenderer';\nimport { IWebGL2RenderingContext } from './Types';\nimport { RenderModel, COMBINED_CHAR_BIT_MASK, RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable } from 'common/Lifecycle';\nimport { Attributes, Content, FgFlags, NULL_CELL_CHAR, NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal, IEvent } from 'xterm';\nimport { IRenderLayer } from './renderLayer/Types';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { ITerminal, IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { CellData } from 'common/buffer/CellData';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { CharData, ICellData } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IDecorationService } from 'common/services/Services';\n\nexport class WebglRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _charAtlas: WebglCharAtlas | undefined;\n  private _devicePixelRatio: number;\n\n  private _model: RenderModel = new RenderModel();\n  private _workCell: CellData = new CellData();\n  private _workColors: { fg: number, bg: number } = { fg: 0, bg: 0 };\n\n  private _canvas: HTMLCanvasElement;\n  private _gl: IWebGL2RenderingContext;\n  private _rectangleRenderer: RectangleRenderer;\n  private _glyphRenderer: GlyphRenderer;\n\n  public dimensions: IRenderDimensions;\n\n  private _core: ITerminal;\n  private _isAttached: boolean;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    private readonly _decorationService: IDecorationService,\n    preserveDrawingBuffer?: boolean\n  ) {\n    super();\n\n    this._core = (this._terminal as any)._core;\n\n    this._renderLayers = [\n      new LinkRenderLayer(this._core.screenElement!, 2, this._colors, this._core),\n      new CursorRenderLayer(_terminal, this._core.screenElement!, 3, this._colors, this._core, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n\n    this._canvas = document.createElement('canvas');\n\n    const contextAttributes = {\n      antialias: false,\n      depth: false,\n      preserveDrawingBuffer\n    };\n    this._gl = this._canvas.getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n    if (!this._gl) {\n      throw new Error('WebGL2 not supported ' + this._gl);\n    }\n\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextlost', (e) => { this._onContextLoss.fire(e); }));\n\n    this._core.screenElement!.appendChild(this._canvas);\n\n    this._rectangleRenderer = new RectangleRenderer(this._terminal, this._colors, this._gl, this.dimensions);\n    this._glyphRenderer = new GlyphRenderer(this._terminal, this._colors, this._gl, this.dimensions);\n\n    // Update dimensions and acquire char atlas\n    this.onCharSizeChanged();\n\n    this._isAttached = document.body.contains(this._core.screenElement!);\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    this._canvas.parentElement?.removeChild(this._canvas);\n    super.dispose();\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._charAtlas?.cacheCanvas;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._terminal, this._colors);\n      l.reset(this._terminal);\n    }\n\n    this._rectangleRenderer.setColors();\n    this._glyphRenderer.setColors();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._model.clear();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    this._model.resize(this._terminal.cols, this._terminal.rows);\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this._terminal, this.dimensions);\n    }\n\n    // Resize the canvas\n    this._canvas.width = this.dimensions.scaledCanvasWidth;\n    this._canvas.height = this.dimensions.scaledCanvasHeight;\n    this._canvas.style.width = `${this.dimensions.canvasWidth}px`;\n    this._canvas.style.height = `${this.dimensions.canvasHeight}px`;\n\n    // Resize the screen\n    this._core.screenElement!.style.width = `${this.dimensions.canvasWidth}px`;\n    this._core.screenElement!.style.height = `${this.dimensions.canvasHeight}px`;\n\n    this._rectangleRenderer.onResize();\n    this._glyphRenderer.setDimensions(this.dimensions);\n    this._glyphRenderer.onResize();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._model.clear();\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    for (const l of this._renderLayers) {\n      l.onBlur(this._terminal);\n    }\n  }\n\n  public onFocus(): void {\n    for (const l of this._renderLayers) {\n      l.onFocus(this._terminal);\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    for (const l of this._renderLayers) {\n      l.onSelectionChanged(this._terminal, start, end, columnSelectMode);\n    }\n    this._updateSelectionModel(start, end, columnSelectMode);\n    this._requestRedrawViewport();\n  }\n\n  public onCursorMove(): void {\n    for (const l of this._renderLayers) {\n      l.onCursorMove(this._terminal);\n    }\n  }\n\n  public onOptionsChanged(): void {\n    for (const l of this._renderLayers) {\n      l.onOptionsChanged(this._terminal);\n    }\n    this._updateDimensions();\n    this._refreshCharAtlas();\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(): void {\n    if (this.dimensions.scaledCharWidth <= 0 && this.dimensions.scaledCharHeight <= 0) {\n      // Mark as not attached so char atlas gets refreshed on next render\n      this._isAttached = false;\n      return;\n    }\n\n    const atlas = acquireCharAtlas(this._terminal, this._colors, this.dimensions.scaledCellWidth, this.dimensions.scaledCellHeight, this.dimensions.scaledCharWidth, this.dimensions.scaledCharHeight);\n    if (!('getRasterizedGlyph' in atlas)) {\n      throw new Error('The webgl renderer only works with the webgl char atlas');\n    }\n    this._charAtlas = atlas as WebglCharAtlas;\n    this._charAtlas.warmUp();\n    this._glyphRenderer.setAtlas(this._charAtlas);\n  }\n\n  public clearCharAtlas(): void {\n    this._charAtlas?.clearTexture();\n    this._model.clear();\n    this._updateModel(0, this._terminal.rows - 1);\n    this._requestRedrawViewport();\n  }\n\n  public clear(): void {\n    this._model.clear();\n    this._glyphRenderer.clear(true);\n    for (const l of this._renderLayers) {\n      l.reset(this._terminal);\n    }\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return -1;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return false;\n  }\n\n  public renderRows(start: number, end: number): void {\n    if (!this._isAttached) {\n      if (document.body.contains(this._core.screenElement!) && (this._core as any)._charSizeService.width && (this._core as any)._charSizeService.height) {\n        this._updateDimensions();\n        this._refreshCharAtlas();\n        this._isAttached = true;\n      } else {\n        return;\n      }\n    }\n\n    // Update render layers\n    for (const l of this._renderLayers) {\n      l.onGridChanged(this._terminal, start, end);\n    }\n\n    // Tell renderer the frame is beginning\n    if (this._glyphRenderer.beginFrame()) {\n      this._model.clear();\n      this._updateSelectionModel(undefined, undefined);\n    }\n\n    // Update model to reflect what's drawn\n    this._updateModel(start, end);\n\n    // Render\n    this._rectangleRenderer.render();\n    this._glyphRenderer.render(this._model);\n  }\n\n  private _updateModel(start: number, end: number): void {\n    const terminal = this._core;\n    let cell: ICellData = this._workCell;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + terminal.buffer.ydisp;\n      const line = terminal.buffer.lines.get(row)!;\n      this._model.lineLengths[y] = 0;\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < terminal.cols; x++) {\n        line.loadCell(x, cell);\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            cell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        const chars = cell.getChars();\n        let code = cell.getCode();\n        const i = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n\n        // Load colors/resolve overrides into work colors\n        this._loadColorsForCell(x, row);\n\n        if (code !== NULL_CELL_CODE) {\n          this._model.lineLengths[y] = x + 1;\n        }\n\n        // Nothing has changed, no updates needed\n        if (this._model.cells[i] === code &&\n            this._model.cells[i + RENDER_MODEL_BG_OFFSET] === this._workColors.bg &&\n            this._model.cells[i + RENDER_MODEL_FG_OFFSET] === this._workColors.fg) {\n          continue;\n        }\n\n        // Flag combined chars with a bit mask so they're easily identifiable\n        if (chars.length > 1) {\n          code |= COMBINED_CHAR_BIT_MASK;\n        }\n\n        // Cache the results in the model\n        this._model.cells[i] = code;\n        this._model.cells[i + RENDER_MODEL_BG_OFFSET] = this._workColors.bg;\n        this._model.cells[i + RENDER_MODEL_FG_OFFSET] = this._workColors.fg;\n\n        this._glyphRenderer.updateCell(x, y, code, this._workColors.bg, this._workColors.fg, chars);\n\n        if (isJoined) {\n          // Restore work cell\n          cell = this._workCell;\n\n          // Null out non-first cells\n          for (x++; x < lastCharX; x++) {\n            const j = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n            this._glyphRenderer.updateCell(x, y, NULL_CELL_CODE, 0, 0, NULL_CELL_CHAR);\n            this._model.cells[j] = NULL_CELL_CODE;\n            this._model.cells[j + RENDER_MODEL_BG_OFFSET] = this._workColors.bg;\n            this._model.cells[j + RENDER_MODEL_FG_OFFSET] = this._workColors.fg;\n          }\n        }\n      }\n    }\n    this._rectangleRenderer.updateBackgrounds(this._model);\n  }\n\n  /**\n   * Loads colors for the cell into the work colors object. This resolves overrides/inverse if\n   * necessary which is why the work cell object is not used.\n   */\n  private _loadColorsForCell(x: number, y: number): void {\n    this._workColors.bg = this._workCell.bg;\n    this._workColors.fg = this._workCell.fg;\n\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n    let bgOverride: number | undefined;\n    let fgOverride: number | undefined;\n\n    // Apply decorations on the bottom layer\n    for (const d of this._decorationService.getDecorationsAtCell(x, y, 'bottom')) {\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Apply the selection color if needed\n    if (this._isCellSelected(x, y)) {\n      bgOverride = this._colors.selectionOpaque.rgba >> 8 & 0xFFFFFF;\n      if (this._colors.selectionForeground) {\n        fgOverride = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Apply decorations on the top layer\n    for (const d of this._decorationService.getDecorationsAtCell(x, y, 'top')) {\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if (bgOverride !== undefined) {\n      // Non-RGB attributes from model + override + force RGB color mode\n      bgOverride = (this._workCell.bg & ~Attributes.RGB_MASK) | bgOverride | Attributes.CM_RGB;\n    }\n    if (fgOverride !== undefined) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      fgOverride = (this._workCell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | fgOverride | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bgOverride or fgOverride was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this._workColors.fg & FgFlags.INVERSE) {\n      if (bgOverride !== undefined && fgOverride === undefined) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this._workColors.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          fgOverride = (this._workColors.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | ((this._colors.background.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          fgOverride = (this._workColors.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this._workColors.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n      }\n      if (bgOverride === undefined && fgOverride !== undefined) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this._workColors.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          bgOverride = (this._workColors.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | ((this._colors.foreground.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          bgOverride = (this._workColors.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this._workColors.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n      }\n    }\n\n    // Use the override if it exists\n    this._workColors.bg = bgOverride ?? this._workColors.bg;\n    this._workColors.fg = fgOverride ?? this._workColors.fg;\n  }\n\n  private _isCellSelected(x: number, y: number): boolean {\n    if (!this._model.selection.hasSelection) {\n      return false;\n    }\n    y -= this._terminal.buffer.active.viewportY;\n    if (this._model.selection.columnSelectMode) {\n      if (this._model.selection.startCol <= this._model.selection.endCol) {\n        return x >= this._model.selection.startCol && y >= this._model.selection.viewportCappedStartRow &&\n          x < this._model.selection.endCol && y <= this._model.selection.viewportCappedEndRow;\n      }\n      return x < this._model.selection.startCol && y >= this._model.selection.viewportCappedStartRow &&\n        x >= this._model.selection.endCol && y <= this._model.selection.viewportCappedEndRow;\n    }\n    return (y > this._model.selection.viewportStartRow && y < this._model.selection.viewportEndRow) ||\n      (this._model.selection.viewportStartRow === this._model.selection.viewportEndRow && y === this._model.selection.viewportStartRow && x >= this._model.selection.startCol && x < this._model.selection.endCol) ||\n      (this._model.selection.viewportStartRow < this._model.selection.viewportEndRow && y === this._model.selection.viewportEndRow && x < this._model.selection.endCol) ||\n      (this._model.selection.viewportStartRow < this._model.selection.viewportEndRow && y === this._model.selection.viewportStartRow && x >= this._model.selection.startCol);\n  }\n\n  private _updateSelectionModel(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    const terminal = this._terminal;\n\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this._model.clearSelection();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this._model.clearSelection();\n      return;\n    }\n\n    this._model.selection.hasSelection = true;\n    this._model.selection.columnSelectMode = columnSelectMode;\n    this._model.selection.viewportStartRow = viewportStartRow;\n    this._model.selection.viewportEndRow = viewportEndRow;\n    this._model.selection.viewportCappedStartRow = viewportCappedStartRow;\n    this._model.selection.viewportCappedEndRow = viewportCappedEndRow;\n    this._model.selection.startCol = start[0];\n    this._model.selection.endCol = end[0];\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // TODO: Acquire CharSizeService properly\n\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!(this._core as any)._charSizeService.width || !(this._core as any)._charSizeService.height) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n\n    // NOTE: ceil fixes sometime, floor does others :s\n\n    this.dimensions.scaledCharWidth = Math.floor((this._core as any)._charSizeService.width * this._devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil((this._core as any)._charSizeService.height * this._devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight!);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing!);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing! / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / this._devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / this._devicePixelRatio);\n\n    // this.dimensions.scaledCanvasHeight = this.dimensions.canvasHeight * devicePixelRatio;\n    // this.dimensions.scaledCanvasWidth = this.dimensions.canvasWidth * devicePixelRatio;\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. CharMeasure.width/height by itself is\n    // insufficient when the page is not at 100% zoom level as CharMeasure is\n    // measured in CSS pixels, but the actual char size on the canvas can\n    // differ.\n    // this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    // this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n\n    // This fixes 110% and 125%, not 150% or 175% though\n    this.dimensions.actualCellHeight = this.dimensions.scaledCellHeight / this._devicePixelRatio;\n    this.dimensions.actualCellWidth = this.dimensions.scaledCellWidth / this._devicePixelRatio;\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n}\n\n// TODO: Share impl with core\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A matrix that when multiplies will translate 0-1 coordinates (left to right,\n * top to bottom) to clip space.\n */\nexport const PROJECTION_MATRIX = new Float32Array([\n  2, 0, 0, 0,\n  0, -2, 0, 0,\n  0, 0, 1, 0,\n  -1, 1, 0, 1\n]);\n\nexport function createProgram(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram | undefined {\n  const program = throwIfFalsy(gl.createProgram());\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.VERTEX_SHADER, vertexSource)));\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.FRAGMENT_SHADER, fragmentSource)));\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = throwIfFalsy(gl.createShader(type));\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.error(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function expandFloat32Array(source: Float32Array, max: number): Float32Array {\n  const newLength = Math.min(source.length * 2, max);\n  const newArray = new Float32Array(newLength);\n  for (let i = 0; i < source.length; i++) {\n    newArray[i] = source[i];\n  }\n  return newArray;\n}\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport { WebglCharAtlas } from './WebglCharAtlas';\nimport { ICharAtlasConfig } from './Types';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\n\ninterface ICharAtlasCacheEntry {\n  atlas: WebglCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: Terminal,\n  colors: IColorSet,\n  scaledCellWidth: number,\n  scaledCellHeight: number,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): WebglCharAtlas {\n  const newConfig = generateConfig(scaledCellWidth, scaledCellHeight, scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new WebglCharAtlas(document, newConfig),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { Terminal, FontWeight } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nconst NULL_COLOR: IColor = {\n  css: '',\n  rgba: 0\n};\n\nexport function generateConfig(scaledCellWidth: number, scaledCellHeight: number, scaledCharWidth: number, scaledCharHeight: number, terminal: Terminal, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionTransparent: NULL_COLOR,\n    selectionOpaque: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: terminal.options.customGlyphs!,\n    devicePixelRatio: window.devicePixelRatio,\n    letterSpacing: terminal.options.letterSpacing!,\n    lineHeight: terminal.options.lineHeight!,\n    scaledCellWidth,\n    scaledCellHeight,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.options.fontFamily!,\n    fontSize: terminal.options.fontSize!,\n    fontWeight: terminal.options.fontWeight as FontWeight,\n    fontWeightBold: terminal.options.fontWeightBold as FontWeight,\n    allowTransparency: terminal.options.allowTransparency!,\n    drawBoldTextInBrightColors: terminal.options.drawBoldTextInBrightColors!,\n    minimumContrastRatio: terminal.options.minimumContrastRatio!,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IRasterizedGlyph, IBoundingBox, IRasterizedGlyphSet } from '../Types';\nimport { DEFAULT_COLOR, Attributes } from 'common/buffer/Constants';\nimport { throwIfFalsy } from '../WebglUtils';\nimport { IColor } from 'common/Types';\nimport { IDisposable } from 'xterm';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { channels, rgba } from 'common/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\nimport { excludeFromContrastRatioDemands, isPowerlineGlyph } from 'browser/renderer/RendererUtils';\n\n// For debugging purposes, it can be useful to set this to a really tiny value,\n// to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\n/**\n * The amount of the texture to be filled before throwing it away and starting\n * again. Since the throw away and individual glyph draws don't cost too much,\n * this prevent juggling multiple textures in the GL context.\n */\nconst TEXTURE_CAPACITY = Math.floor(TEXTURE_HEIGHT * 0.8);\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  offset: { x: 0, y: 0 },\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nexport class WebglCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: { [code: number]: IRasterizedGlyphSet } = {};\n  private _cacheMapCombined: { [chars: string]: IRasterizedGlyphSet } = {};\n\n  // The texture that the atlas is drawn to\n  public cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // Since glyphs are expected to be around the same height, the packing\n  // strategy used it to fill a row with glyphs while keeping track of the\n  // tallest glyph in the row. Once the row is full a new row is started at\n  // (0,lastRow+lastRowTallestGlyph).\n  private _currentRowY: number = 0;\n  private _currentRowX: number = 0;\n  private _currentRowHeight: number = 0;\n\n  public hasCanvasChanged = false;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  constructor(\n    document: Document,\n    private _config: ICharAtlasConfig\n  ) {\n    this.cacheCanvas = document.createElement('canvas');\n    this.cacheCanvas.width = TEXTURE_WIDTH;\n    this.cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this.cacheCanvas.getContext('2d', { alpha: true }));\n\n    this._tmpCanvas = document.createElement('canvas');\n    this._tmpCanvas.width = this._config.scaledCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCanvas.height = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n  }\n\n  public dispose(): void {\n    if (this.cacheCanvas.parentElement) {\n      this.cacheCanvas.parentElement.removeChild(this.cacheCanvas);\n    }\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126\n    for (let i = 33; i < 126; i++) {\n      const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR);\n      this._cacheMap[i] = {\n        [DEFAULT_COLOR]: {\n          [DEFAULT_COLOR]: rasterizedGlyph\n        }\n      };\n    }\n  }\n\n  public beginFrame(): boolean {\n    if (this._currentRowY > TEXTURE_CAPACITY) {\n      this.clearTexture();\n      this.warmUp();\n      return true;\n    }\n    return false;\n  }\n\n  public clearTexture(): void {\n    if (this._currentRowX === 0 && this._currentRowY === 0) {\n      return;\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._cacheMap = {};\n    this._cacheMapCombined = {};\n    this._currentRowHeight = 0;\n    this._currentRowX = 0;\n    this._currentRowY = 0;\n    this._didWarmUp = false;\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number): IRasterizedGlyph {\n    let rasterizedGlyphSet = this._cacheMapCombined[chars];\n    if (!rasterizedGlyphSet) {\n      rasterizedGlyphSet = {};\n      this._cacheMapCombined[chars] = rasterizedGlyphSet;\n    }\n    let rasterizedGlyph: IRasterizedGlyph | undefined;\n    const rasterizedGlyphSetBg = rasterizedGlyphSet[bg];\n    if (rasterizedGlyphSetBg) {\n      rasterizedGlyph = rasterizedGlyphSetBg[fg];\n    }\n    if (!rasterizedGlyph) {\n      rasterizedGlyph = this._drawToCache(chars, bg, fg);\n      if (!rasterizedGlyphSet[bg]) {\n        rasterizedGlyphSet[bg] = {};\n      }\n      rasterizedGlyphSet[bg]![fg] = rasterizedGlyph;\n    }\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  public getRasterizedGlyph(code: number, bg: number, fg: number): IRasterizedGlyph {\n    let rasterizedGlyphSet = this._cacheMap[code];\n    if (!rasterizedGlyphSet) {\n      rasterizedGlyphSet = {};\n      this._cacheMap[code] = rasterizedGlyphSet;\n    }\n    let rasterizedGlyph: IRasterizedGlyph | undefined;\n    const rasterizedGlyphSetBg = rasterizedGlyphSet[bg];\n    if (rasterizedGlyphSetBg) {\n      rasterizedGlyph = rasterizedGlyphSetBg[fg];\n    }\n    if (!rasterizedGlyph) {\n      rasterizedGlyph = this._drawToCache(code, bg, fg);\n      if (!rasterizedGlyphSet[bg]) {\n        rasterizedGlyphSet[bg] = {};\n      }\n      rasterizedGlyphSet[bg]![fg] = rasterizedGlyph;\n    }\n    return rasterizedGlyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor);\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        return {\n          rgba: bgColor << 8,\n          css: `#${toPaddedHex(arr[0])}${toPaddedHex(arr[1])}${toPaddedHex(arr[2])}`\n        };\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground;\n        }\n        return this._config.colors.background;\n    }\n  }\n\n  private _getForegroundCss(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): string {\n    const minimumContrastCss = this._getMinimumContrastCss(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold, excludeFromContrastRatioDemands);\n    if (minimumContrastCss) {\n      return minimumContrastCss;\n    }\n\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).css;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        return channels.toCss(arr[0], arr[1], arr[2]);\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          const bg = this._config.colors.background.css;\n          if (bg.length === 9) {\n            // Remove bg alpha channel if present\n            return bg.slice(0, 7);\n          }\n          return bg;\n        }\n        return this._config.colors.foreground.css;\n    }\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastCss(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): string | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getCss(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setCss(bg, fg, null);\n      return undefined;\n    }\n\n    const css = channels.toCss(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setCss(bg, fg, css);\n\n    return css;\n  }\n\n  private _drawToCache(code: number, bg: number, fg: number): IRasterizedGlyph;\n  private _drawToCache(chars: string, bg: number, fg: number): IRasterizedGlyph;\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    this.hasCanvasChanged = true;\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = this._config.scaledCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerLineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    this._tmpCtx.fillStyle = this._getForegroundCss(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold, excludeFromContrastRatioDemands(chars.charCodeAt(0)));\n\n    // Apply alpha to dim the character\n    if (dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = powerLineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING;\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._config.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight);\n    }\n\n    // If this charcater is underscore and beyond the cell bounds, shift it up until it is visible,\n    // try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.clearRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw underline and strikethrough\n    if (underline || strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      if (underline) {\n        this._tmpCtx.moveTo(padding, padding + this._config.scaledCharHeight - yOffset);\n        this._tmpCtx.lineTo(padding + this._config.scaledCharWidth, padding + this._config.scaledCharHeight - yOffset);\n      }\n      if (strikethrough) {\n        this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n        this._tmpCtx.lineTo(padding + this._config.scaledCharWidth, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n      }\n      this._tmpCtx.stroke();\n      this._tmpCtx.closePath();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // TODO: Support transparency\n    // let isEmpty = false;\n    // if (!this._config.allowTransparency) {\n    //   isEmpty = clearColor(imageData, backgroundColor);\n    // }\n\n    // Clear out the background color and determine if the glyph is empty.\n    const isEmpty = clearColor(imageData, backgroundColor);\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, powerLineGlyph, drawSuccess);\n    const clippedImageData = this._clipImageData(imageData, this._workBoundingBox);\n\n    // Check if there is enough room in the current row and go to next if needed\n    if (this._currentRowX + rasterizedGlyph.size.x > TEXTURE_WIDTH) {\n      this._currentRowX = 0;\n      this._currentRowY += this._currentRowHeight;\n      this._currentRowHeight = 0;\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePosition.x = this._currentRowX;\n    rasterizedGlyph.texturePosition.y = this._currentRowY;\n    rasterizedGlyph.texturePositionClipSpace.x = this._currentRowX / TEXTURE_WIDTH;\n    rasterizedGlyph.texturePositionClipSpace.y = this._currentRowY / TEXTURE_HEIGHT;\n\n    // Update atlas current row\n    this._currentRowHeight = Math.max(this._currentRowHeight, rasterizedGlyph.size.y);\n    this._currentRowX += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(clippedImageData, rasterizedGlyph.texturePosition.x, rasterizedGlyph.texturePosition.y);\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.scaledCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.scaledCharWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = width - 1; x >= 0; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1) / TEXTURE_WIDTH,\n        y: (boundingBox.bottom - boundingBox.top + 1) / TEXTURE_HEIGHT\n      },\n      offset: {\n        x: -boundingBox.left + (restrictedGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING) + (customGlyph ? Math.floor(this._config.letterSpacing / 2) : 0),\n        y: -boundingBox.top + (restrictedGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING) + (customGlyph ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.scaledCellHeight - this._config.scaledCharHeight) / 2) : 0)\n      }\n    };\n  }\n\n  private _clipImageData(imageData: ImageData, boundingBox: IBoundingBox): ImageData {\n    const width = boundingBox.right - boundingBox.left + 1;\n    const height = boundingBox.bottom - boundingBox.top + 1;\n    const clippedData = new Uint8ClampedArray(width * height * 4);\n    for (let y = boundingBox.top; y <= boundingBox.bottom; y++) {\n      for (let x = boundingBox.left; x <= boundingBox.right; x++) {\n        const oldOffset = y * this._tmpCanvas.width * 4 + x * 4;\n        const newOffset = (y - boundingBox.top) * width * 4 + (x - boundingBox.left) * 4;\n        clippedData[newOffset] = imageData.data[oldOffset];\n        clippedData[newOffset + 1] = imageData.data[oldOffset + 1];\n        clippedData[newOffset + 2] = imageData.data[oldOffset + 2];\n        clippedData[newOffset + 3] = imageData.data[oldOffset + 3];\n      }\n    }\n    return new ImageData(clippedData, width, height);\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { acquireCharAtlas } from '../atlas/CharAtlasCache';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { WebglCharAtlas } from 'atlas/WebglCharAtlas';\nimport { throwIfFalsy } from '../WebglUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: WebglCharAtlas | undefined;\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {}\n  public onBlur(terminal: Terminal): void {}\n  public onFocus(terminal: Terminal): void {}\n  public onCursorMove(terminal: Terminal): void {}\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(terminal: Terminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected _setTransparency(terminal: Terminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: Terminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCellWidth, this._scaledCellHeight, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: Terminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(terminal: Terminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(terminal, y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param terminal The terminal.\n   * @param y The row to clip.\n   */\n  private _clipRow(terminal: Terminal, y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      terminal.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: Terminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize! * window.devicePixelRatio}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet, ITerminal } from 'browser/Types';\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { IEventEmitter } from 'common/EventEmitter';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: Terminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    private readonly _terminal: ITerminal,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRedrawEvent>\n  ) {\n    super(container, 'cursor', zIndex, true, colors);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this.onOptionsChanged(terminal);\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n    this.onOptionsChanged(terminal);\n  }\n\n  public onBlur(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onFocus(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.resume(terminal);\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, () => {\n          this._render(terminal, true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onCursorMove(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n  }\n\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: Terminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    // TODO: Need to expose API for this\n    if (!this._terminal.coreService.isCursorInitialized || this._terminal.coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.active.baseY + terminal.buffer.active.cursorY;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.active.viewportY;\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(terminal.buffer.active.cursorX, terminal.cols - 1);\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // TODO: Need fast buffer API for loading cell\n    (terminal as any)._core.buffer.lines.get(cursorY).loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!isTerminalFocused(terminal)) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = terminal.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](terminal, cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(terminal, cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle!;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === isTerminalFocused(terminal) &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle!;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, terminal.options.cursorWidth!);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    terminal: Terminal,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isTerminalFocused(terminal)) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: Terminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(terminal: Terminal): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n\nfunction isTerminalFocused(terminal: Terminal): boolean {\n  return document.activeElement === terminal.textarea && document.hasFocus();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from '../atlas/CharAtlasUtils';\nimport { ITerminal, IColorSet, ILinkifierEvent } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, terminal: ITerminal) {\n    super(container, 'link', zIndex, true, colors);\n    terminal.linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    terminal.linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg !== undefined && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg!].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  /** Padding to apply to the vector's x axis in CSS pixels. */\n  horizontalPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.STROKE, horizontalPadding: 0.5 }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.beginPath();\n  ctx.lineWidth = window.devicePixelRatio;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, charDefinition.horizontalPadding));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, horizontalPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (horizontalPadding * 2 * window.devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (horizontalPadding * window.devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, bgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, bgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon, IEvent } from 'xterm';\nimport { WebglRenderer } from './WebglRenderer';\nimport { ICharacterJoinerService, IRenderService } from 'browser/services/Services';\nimport { IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { isSafari } from 'common/Platform';\nimport { IDecorationService } from 'common/services/Services';\n\nexport class WebglAddon implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: WebglRenderer;\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _preserveDrawingBuffer?: boolean\n  ) {}\n\n  public activate(terminal: Terminal): void {\n    if (!terminal.element) {\n      throw new Error('Cannot activate WebglAddon before Terminal.open');\n    }\n    if (isSafari) {\n      throw new Error('Webgl is not currently supported on Safari');\n    }\n    this._terminal = terminal;\n    const renderService: IRenderService = (terminal as any)._core._renderService;\n    const characterJoinerService: ICharacterJoinerService = (terminal as any)._core._characterJoinerService;\n    const decorationService: IDecorationService = (terminal as any)._core._decorationService;\n    const colors: IColorSet = (terminal as any)._core._colorManager.colors;\n    this._renderer = new WebglRenderer(terminal, colors, characterJoinerService, decorationService, this._preserveDrawingBuffer);\n    this._renderer.onContextLoss(() => this._onContextLoss.fire());\n    renderService.setRenderer(this._renderer);\n  }\n\n  public dispose(): void {\n    if (!this._terminal) {\n      throw new Error('Cannot dispose WebglAddon because it is activated');\n    }\n    const renderService: IRenderService = (this._terminal as any)._core._renderService;\n    renderService.setRenderer((this._terminal as any)._core._createRenderer());\n    renderService.onResize(this._terminal.cols, this._terminal.rows);\n    this._renderer = undefined;\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearCharAtlas();\n  }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n"],"names":["COMPONENT_NAME","iconButtonStyles","root","height","icon","fontSize","iconButtonProps","iconName","defaultClearButtonProps","ariaLabel","getClassNames","classNamesFunction","SearchBoxBase","props","forwardedRef","className","defaultValue","disabled","underlined","styles","labelText","placeholder","theme","clearButtonProps","disableAnimation","showIcon","customOnClear","customOnBlur","customOnEscape","customOnSearch","customOnKeyDown","iconProps","role","onChange","onChanged","hasFocus","setHasFocus","prevChangeTimestamp","useControllableValue","value","ev","newValue","timeStamp","current","uncastValue","setValue","String","rootElementRef","inputElementRef","mergedRootRef","useMergedRefs","id","useId","customOnClearClick","classNames","hasInput","length","nativeProps","onClear","defaultPrevented","focus","stopPropagation","preventDefault","onClearClick","onBlur","onInputChange","target","componentRef","useComponentRef","ref","onFocusCapture","onFocus","iconContainer","onClick","selectionStart","selectionEnd","Icon","field","onInput","onKeyDown","which","KeyCodes","clearButton","IconButton","displayName","GlobalClassNames","SearchBox","styled","palette","fonts","semanticColors","effects","placeholderStyles","color","inputPlaceholderText","opacity","inputIconAlt","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","medium","inputText","backgroundColor","inputBackground","display","flexDirection","flexWrap","alignItems","padding","borderRadius","roundedCorner2","border","inputBorder","selectors","borderColor","inputBorderHovered","inputIconHovered","width","pointerEvents","position","inputFocusBorderAlt","cursor","borderWidth","justifyContent","flexShrink","textAlign","inputIcon","inputIconDisabled","transition","flexBasis","margin","outline","fontWeight","fontFamily","flex","minWidth","overflow","textOverflow","paddingBottom","disabledText","undefined","scope","self","module","exports","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","core","_core","rows","cols","_renderService","clear","resize","element","parentElement","dimensions","actualCellWidth","actualCellHeight","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","viewport","scrollBarWidth","floor","FitAddon","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","r","i","NON_WORD_CHARACTERS","e","_linesCacheTimeoutId","_onDidChangeResults","EventEmitter","onDidChangeResults","event","_onDataDisposable","onWriteParsed","t","_updateMatches","_onResizeDisposable","onResize","_highlightTimeout","clearTimeout","_cachedSearchTerm","_lastSearchOptions","decorations","setTimeout","findPrevious","incremental","noScroll","_resultIndex","_searchResults","size","fire","resultIndex","resultCount","clearDecorations","retainCachedSearchTerm","_selectedDecoration","_resultDecorations","forEach","clearActiveDecoration","findNext","term","searchOptions","Error","_highlightAllMatches","_fireResults","_findNextAndSelect","Map","resultDecorations","result","_find","get","row","col","set","resultDecoration","_createResultDecoration","decorationsForLine","marker","line","push","startRow","startCol","clearSelection","_initLinesCache","searchPosition","_findInLine","y","buffer","active","baseY","currentSelection","hasSelection","getSelectionPosition","endRow","startColumn","endColumn","_selectResult","_findPreviousAndSelect","found","isReverseSearch","_linesCache","Array","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","_isWholeWord","searchIndex","includes","firstLine","getLine","isWrapped","cache","_translateBufferLineToStringWithWrap","stringLine","offsets","offset","_bufferColsToStringOffset","searchTerm","caseSensitive","toLowerCase","searchStringLine","regex","searchRegex","RegExp","foundTerm","exec","slice","lastIndex","lastIndexOf","indexOf","wholeWord","startRowOffset","endRowOffset","startColOffset","endColOffset","startColIndex","_stringLengthToBufferSize","cell","getCell","char","getChars","nextCell","getWidth","lineIndex","getCode","trimRight","strings","lineOffsets","nextLine","lineWrapsToNext","string","translateToString","lastCell","join","options","select","registerMarker","cursorY","registerDecoration","x","activeMatchBackground","layer","overviewRulerOptions","activeMatchColorOverviewRuler","onRender","_applyStyles","activeMatchBorder","onDispose","viewportY","scrollLines","isActiveResult","clientWidth","classList","contains","add","style","findResultDecoration","matchBackground","matchOverviewRuler","matchBorder","SearchAddon","_listeners","_disposed","_event","listener","splice","arg1","arg2","queue","call","from","to","cachedModule","INDICES_PER_CELL","BYTES_PER_CELL","Float32Array","BYTES_PER_ELEMENT","_colors","_gl","_dimensions","_activeBuffer","_vertices","count","attributes","attributesBuffers","gl","program","throwIfFalsy","createProgram","_program","_projectionLocation","getUniformLocation","_resolutionLocation","_textureLocation","_vertexArrayObject","createVertexArray","bindVertexArray","unitQuadVertices","unitQuadVerticesBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","unitQuadElementIndices","Uint8Array","elementIndicesBuffer","ELEMENT_ARRAY_BUFFER","_attributesBuffer","vertexAttribDivisor","_atlasTexture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","beginFrame","_atlas","updateCell","code","bg","fg","chars","_updateCell","array","rasterizedGlyph","NULL_CELL_CODE","getRasterizedGlyphCombinedChar","getRasterizedGlyph","scaledCharLeft","scaledCharTop","scaledCanvasWidth","scaledCanvasHeight","texturePositionClipSpace","sizeClipSpace","fill","force","newCount","canvas","setColors","render","renderModel","useProgram","activeBuffer","bufferLength","lineLengths","si","sub","subarray","STREAM_DRAW","hasCanvasChanged","uniform1i","activeTexture","TEXTURE0","cacheCanvas","generateMipmap","uniformMatrix4fv","PROJECTION_MATRIX","uniform2f","drawElementsInstanced","TRIANGLES","setAtlas","atlas","setDimensions","GlyphRenderer","BYTES_PER_RECTANGLE","_updateCachedColors","DYNAMIC_DRAW","_updateViewportRectangle","_bgFloat","_colorToFloat32Array","background","_addRectangleFloat","scaledCellWidth","scaledCellHeight","updateBackgrounds","model","vertices","rectangleCount","currentStartX","currentBg","currentFg","currentInverse","modelIndex","RENDER_MODEL_INDICIES_PER_CELL","cells","RENDER_MODEL_BG_OFFSET","RENDER_MODEL_FG_OFFSET","inverse","_updateRectangle","startX","endX","rgba","ansi","foreground","expandFloat32Array","x1","y1","g","b","_addRectangle","a","RectangleRenderer","COMBINED_CHAR_BIT_MASK","Uint32Array","selection","columnSelectMode","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","endCol","indexCount","RenderModel","_characterJoinerService","_decorationService","preserveDrawingBuffer","_model","_workCell","CellData","_workColors","_onRequestRedraw","_onContextLoss","_renderLayers","LinkRenderLayer","screenElement","CursorRenderLayer","scaledCharWidth","scaledCharHeight","canvasWidth","canvasHeight","_devicePixelRatio","devicePixelRatio","_updateDimensions","_canvas","document","createElement","contextAttributes","antialias","depth","getContext","register","addDisposableDomListener","appendChild","_rectangleRenderer","_glyphRenderer","onCharSizeChanged","_isAttached","body","removeChild","_charAtlas","colors","l","reset","_refreshCharAtlas","onDevicePixelRatioChange","onSelectionChanged","start","end","_updateSelectionModel","_requestRedrawViewport","onOptionsChanged","acquireCharAtlas","warmUp","clearCharAtlas","clearTexture","_updateModel","registerCharacterJoiner","handler","deregisterCharacterJoiner","joinerId","renderRows","_charSizeService","onGridChanged","ydisp","lines","joinedRanges","getJoinedCharacters","loadCell","isJoined","lastCharX","range","shift","JoinedCellData","_loadColorsForCell","j","NULL_CELL_CHAR","bgOverride","fgOverride","getDecorationsAtCell","d","backgroundColorRGB","foregroundColorRGB","_isCellSelected","selectionOpaque","selectionForeground","min","ceil","lineHeight","round","letterSpacing","Disposable","WebglRenderer","firstCell","content","combinedData","_width","isCombined","setFromCharData","getAsCharData","AttributeData","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","newLength","newArray","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","newEntry","WebglCharAtlas","index","NULL_COLOR","css","clonedColors","cursorAccent","selectionTransparent","contrastCache","customGlyphs","fontWeightBold","allowTransparency","drawBoldTextInBrightColors","minimumContrastRatio","colorCode","TEXTURE_WIDTH","TEXTURE_HEIGHT","TEXTURE_CAPACITY","TRANSPARENT_COLOR","NULL_RASTERIZED_GLYPH","texturePosition","_config","_didWarmUp","_cacheMap","_cacheMapCombined","_currentRowY","_currentRowX","_currentRowHeight","_workBoundingBox","top","left","bottom","right","_workAttributeData","_cacheCtx","alpha","_tmpCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","_doWarmUp","_drawToCache","DEFAULT_COLOR","clearRect","rasterizedGlyphSet","rasterizedGlyphSetBg","_getColorFromAnsiIndex","idx","_getBackgroundColor","bgColorMode","bgColor","arr","toColorRGB","toPaddedHex","_getForegroundCss","fgColorMode","fgColor","bold","excludeFromContrastRatioDemands","minimumContrastCss","_getMinimumContrastCss","channels","toCss","_resolveBackgroundRgba","_resolveForegroundRgba","adjustedColor","getCss","bgRgba","fgRgba","ensureContrastRatio","setCss","codeOrChars","fromCharCode","allowedWidth","allowedHeight","save","isInvisible","isBold","isInverse","dim","isDim","italic","isItalic","underline","isUnderline","strikethrough","isStrikethrough","getFgColor","getFgColorMode","getBgColor","getBgColorMode","temp","temp2","globalCompositeOperation","fillStyle","fillRect","fontStyle","font","textBaseline","TEXT_BASELINE","powerLineGlyph","isPowerlineGlyph","charCodeAt","globalAlpha","DIM_OPACITY","drawSuccess","tryDrawCustomChar","fillText","isBeyondCellBounds","clearColor","getImageData","lineWidth","yOffset","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","restore","imageData","_findGlyphBoundingBox","clippedImageData","_clipImageData","putImageData","boundingBox","restrictedGlyph","customGlyph","alphaOffset","data","clippedData","Uint8ClampedArray","oldOffset","newOffset","ImageData","isEmpty","c","s","toString","_container","zIndex","_alpha","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_initCanvas","_ctx","_clearAll","colorSet","_setTransparency","oldCanvas","cloneNode","replaceChild","_fillCells","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","_getFont","_clipRow","rect","clip","BaseRenderLayer","BLINK_INTERVAL","container","_onRequestRefreshRowsEvent","_cell","_state","isFocused","_cursorRenderers","_renderBarCursor","bind","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","coreService","isCursorInitialized","isCursorHidden","viewportRelativeCursorY","cursorX","isTerminalFocused","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","time","setInterval","activeElement","textarea","linkifier","onShowLinkUnderline","_onShowLinkUnderline","onHideLinkUnderline","_onHideLinkUnderline","linkifier2","_clearCurrentLink","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","node","addEventListener","disposed","removeEventListener","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","horizontalPadding","ctx","xOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","startsWith","substring","split","map","parseFloat","createPattern","boxDrawingDefinition","Object","entries","instructions","Number","actualInstructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","powerlineDefinition","clamp","bezierCurveTo","cellWidth","cellHeight","codepoint","isFirefox","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","rgb","contrastRatio","l1","l2","toRgba","blend","fgR","fgG","fgB","bgR","bgG","bgB","isOpaque","ratio","toColor","opaque","rgbaColor","toChannels","match","repeat","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultB","resultA","resultARatio","_disposables","_isDisposed","unregister","disposeArray","disposables","isNode","navigator","userAgent","platform","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","fillFallback","constructor","extended","ExtendedAttrs","fromColorRGB","clone","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","hasExtendedAttrs","updateExtended","getUnderlineColor","underlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","underlineStyle","fromCharData","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","second","CHAR_DATA_WIDTH_INDEX","DEFAULT_ATTR","CHAR_DATA_CODE_INDEX","NULL_CELL_WIDTH","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","codePoint","_interim","decode","input","startPos","StringToUtf32","interim","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","_preserveDrawingBuffer","renderService","characterJoinerService","decorationService","_colorManager","_renderer","onContextLoss","setRenderer","_createRenderer","textureAtlas","clearTextureAtlas","WebglAddon","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype"],"sourceRoot":""}